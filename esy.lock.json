{
  "hash": "008ba9ee22f352acd56d3d12611fb791",
  "root": "root@path:./esy.json",
  "node": {
    "xcpretty@0.2.8001": {
      "record": {
        "name": "xcpretty",
        "version": "0.2.8001",
        "source":
          "archive:https://registry.npmjs.org/xcpretty/-/xcpretty-0.2.8001.tgz#sha1:acb4f02e9e1748c1847b61b9ee94416519422a50",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "xcodegen@1.10.3001": {
      "record": {
        "name": "xcodegen",
        "version": "1.10.3001",
        "source":
          "archive:https://registry.npmjs.org/xcodegen/-/xcodegen-1.10.3001.tgz#sha1:3d98d817fc105cc15bd380a550dd632f783efda3",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "root@path:./esy.json": {
      "record": {
        "name": "root",
        "version": "path:./esy.json",
        "source": "path:./esy.json",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@esy-ocaml/reason@3.3.7", "@opam/alcotest@opam:0.8.4",
        "@opam/cohttp-lwt-unix@opam:1.2.0", "@opam/dune@opam:1.5.0",
        "@opam/easy-format@opam:1.3.1", "@opam/lwt@opam:4.1.0",
        "@opam/lwt_ppx@opam:1.2.1", "@opam/merlin@opam:3.2.2",
        "@opam/ppx_deriving@opam:4.2.1", "@opam/simple-diff@opam:0.3",
        "flex@github:briskml/flex#66cc37f", "ocaml@4.7.1000",
        "refmterr@3.1.9", "xcodegen@1.10.3001", "xcpretty@0.2.8001"
      ]
    },
    "refmterr@3.1.9": {
      "record": {
        "name": "refmterr",
        "version": "3.1.9",
        "source":
          "archive:https://registry.npmjs.org/refmterr/-/refmterr-3.1.9.tgz#sha1:03d4679c564fb1d1de28d1c0ce8b1fb934406bac",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@esy-ocaml/reason@3.3.7", "@opam/jbuilder@opam:transition",
        "@opam/re@opam:1.8.0", "ocaml@4.7.1000"
      ]
    },
    "ocaml@4.7.1000": {
      "record": {
        "name": "ocaml",
        "version": "4.7.1000",
        "source":
          "archive:https://registry.npmjs.org/ocaml/-/ocaml-4.7.1000.tgz#sha1:dfa6c7747a8654bc51c0424c69abadf869c66710",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "flex@github:briskml/flex#66cc37f": {
      "record": {
        "name": "flex",
        "version": "github:briskml/flex#66cc37f",
        "source": "github:briskml/flex#66cc37f",
        "files": [],
        "opam": null
      },
      "dependencies": [ "@esy-ocaml/reason@3.3.7", "@opam/dune@opam:1.5.0" ]
    },
    "@opam/yojson@opam:1.4.1": {
      "record": {
        "name": "@opam/yojson",
        "version": "opam:1.4.1",
        "source":
          "archive:https://github.com/mjambon/yojson/archive/v1.4.1.tar.gz#md5:3ea6e36422dd670e8ab880710d5f7398",
        "files": [],
        "opam": {
          "name": "yojson",
          "version": "1.4.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"yojson\"\nversion: \"1.4.1\"\nsynopsis:\n  \"Yojson is an optimized parsing and printing library for the JSON format\"\ndescription: \"\"\"\nIt addresses a few shortcomings of json-wheel including 2x speedup,\npolymorphic variants and optional syntax for tuples and variants.\n\nydump is a pretty-printing command-line program provided with the\nyojson package.\n\nThe program atdgen can be used to derive OCaml-JSON serializers and\ndeserializers from type definitions.\"\"\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nhomepage: \"http://mjambon.com/yojson.html\"\nbug-reports: \"https://github.com/mjambon/yojson/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build}\n  \"cppo\" {build}\n  \"easy-format\"\n  \"biniou\" {>= \"1.2.0\"}\n]\nbuild: [\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/yojson.git\"\nurl {\n  src: \"https://github.com/mjambon/yojson/archive/v1.4.1.tar.gz\"\n  checksum: \"md5=3ea6e36422dd670e8ab880710d5f7398\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/biniou@opam:1.2.0",
        "@opam/cppo@opam:1.6.5", "@opam/easy-format@opam:1.3.1",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1000"
      ]
    },
    "@opam/uutf@opam:1.0.1": {
      "record": {
        "name": "@opam/uutf",
        "version": "opam:1.0.1",
        "source":
          "archive:http://erratique.ch/software/uutf/releases/uutf-1.0.1.tbz#md5:b8535f974027357094c5cdb4bf03a21b",
        "files": [],
        "opam": {
          "name": "uutf",
          "version": "1.0.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"uutf\"\nversion: \"1.0.1\"\nsynopsis: \"Non-blocking streaming Unicode codec for OCaml\"\ndescription: \"\"\"\nUutf is a non-blocking streaming codec to decode and encode the UTF-8,\nUTF-16, UTF-16LE and UTF-16BE encoding schemes. It can efficiently\nwork character by character without blocking on IO. Decoders perform\ncharacter position tracking and support newline normalization.\n\nFunctions are also provided to fold over the characters of UTF encoded\nOCaml string values and to directly encode characters in OCaml\nBuffer.t values.\n\nUutf has no dependency and is distributed under the ISC license.\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"unicode\" \"text\" \"utf-8\" \"utf-16\" \"codec\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/uutf\"\ndoc: \"http://erratique.ch/software/uutf/doc/Uutf\"\nbug-reports: \"https://github.com/dbuenzli/uutf/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"uchar\"\n]\ndepopts: [\"cmdliner\"]\nconflicts: [\n  \"cmdliner\" {< \"0.9.6\"}\n]\nbuild: [\n  \"ocaml\"\n  \"pkg/pkg.ml\"\n  \"build\"\n  \"--pinned\"\n  \"%{pinned}%\"\n  \"--with-cmdliner\"\n  \"%{cmdliner:installed}%\"\n]\ndev-repo: \"git+http://erratique.ch/repos/uutf.git\"\nurl {\n  src: \"http://erratique.ch/software/uutf/releases/uutf-1.0.1.tbz\"\n  checksum: \"md5=b8535f974027357094c5cdb4bf03a21b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/topkg@opam:1.0.0",
        "@opam/uchar@opam:0.0.2", "ocaml@4.7.1000"
      ]
    },
    "@opam/uuidm@opam:0.9.6": {
      "record": {
        "name": "@opam/uuidm",
        "version": "opam:0.9.6",
        "source":
          "archive:http://erratique.ch/software/uuidm/releases/uuidm-0.9.6.tbz#md5:98ef30cd99ad4e4f7b4c33affa19465b",
        "files": [],
        "opam": {
          "name": "uuidm",
          "version": "0.9.6",
          "opam":
            "opam-version: \"2.0\"\nname: \"uuidm\"\nversion: \"0.9.6\"\nsynopsis: \"Universally unique identifiers (UUIDs) for OCaml\"\ndescription: \"\"\"\nUuidm is an OCaml module implementing 128 bits universally unique\nidentifiers version 3, 5 (named based with MD5, SHA-1 hashing) and 4\n(random based) according to [RFC 4122][rfc4122].\n\nUuidm has no dependency and is distributed under the ISC license.\n\n[rfc4122]: http://tools.ietf.org/html/rfc4122\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"uuid\" \"codec\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/uuidm\"\ndoc: \"http://erratique.ch/software/uuidm/doc/Uuidm\"\nbug-reports: \"https://github.com/dbuenzli/uuidm/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"base-bytes\"\n]\ndepopts: [\"cmdliner\"]\nconflicts: [\n  \"cmdliner\" {< \"0.9.8\"}\n]\nbuild: [\n  \"ocaml\"\n  \"pkg/pkg.ml\"\n  \"build\"\n  \"--pinned\"\n  \"%{pinned}%\"\n  \"--with-cmdliner\"\n  \"%{cmdliner:installed}%\"\n]\ndev-repo: \"git+http://erratique.ch/repos/uuidm.git\"\nurl {\n  src: \"http://erratique.ch/software/uuidm/releases/uuidm-0.9.6.tbz\"\n  checksum: \"md5=98ef30cd99ad4e4f7b4c33affa19465b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/ocamlbuild@opam:0.12.0", "@opam/ocamlfind@opam:1.8.0",
        "@opam/topkg@opam:1.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/uri@opam:2.0.0": {
      "record": {
        "name": "@opam/uri",
        "version": "opam:2.0.0",
        "source":
          "archive:https://github.com/mirage/ocaml-uri/releases/download/v2.0.0/uri-v2.0.0.tbz#md5:810f631627c1113e5e0c39e1f28025e9",
        "files": [],
        "opam": {
          "name": "uri",
          "version": "2.0.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"uri\"\nversion: \"2.0.0\"\nsynopsis: \"An RFC3986 URI/URL parsing library\"\ndescription: \"\"\"\nThis is an OCaml implementation of the [RFC3986](http://tools.ietf.org/html/rfc3986) specification \nfor parsing URI or URLs.\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\"Anil Madhavapeddy\" \"David Sheets\" \"Rudi Grinberg\"]\nlicense: \"ISC\"\ntags: [\"url\" \"uri\" \"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-uri\"\nbug-reports: \"https://github.com/mirage/ocaml-uri/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"dune\" {build & >= \"1.2.0\"}\n  \"ounit\" {with-test & >= \"1.0.2\"}\n  \"ppx_sexp_conv\" {>= \"v0.9.0\"}\n  \"re\" {>= \"1.7.2\"}\n  \"sexplib0\"\n  \"stringext\" {>= \"1.4.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-uri.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-uri/releases/download/v2.0.0/uri-v2.0.0.tbz\"\n  checksum: \"md5=810f631627c1113e5e0c39e1f28025e9\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.5.0",
        "@opam/ppx_sexp_conv@opam:v0.11.2", "@opam/re@opam:1.8.0",
        "@opam/sexplib0@opam:v0.11.0", "@opam/stringext@opam:1.5.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/uchar@opam:0.0.2": {
      "record": {
        "name": "@opam/uchar",
        "version": "opam:0.0.2",
        "source":
          "archive:https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz#md5:c9ba2c738d264c420c642f7bb1cf4a36",
        "files": [],
        "opam": {
          "name": "uchar",
          "version": "0.0.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"uchar\"\nversion: \"0.0.2\"\nsynopsis: \"Compatibility library for OCaml's Uchar module\"\ndescription: \"\"\"\nThe `uchar` package provides a compatibility library for the\n[`Uchar`][1] module introduced in OCaml 4.03.\n\nThe `uchar` package is distributed under the license of the OCaml\ncompiler. See [LICENSE](LICENSE) for details.\n\n[1]: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Uchar.html\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"typeof OCaml system\"\ntags: [\"text\" \"character\" \"unicode\" \"compatibility\" \"org:ocaml.org\"]\nhomepage: \"http://ocaml.org\"\ndoc: \"https://ocaml.github.io/uchar/\"\nbug-reports: \"https://github.com/ocaml/uchar/issues\"\ndepends: [\n  \"ocaml\" {>= \"3.12.0\"}\n  \"ocamlbuild\" {build}\n]\nbuild: [\n  [\"ocaml\" \"pkg/git.ml\"]\n  [\n    \"ocaml\"\n    \"pkg/build.ml\"\n    \"native=%{ocaml:native}%\"\n    \"native-dynlink=%{ocaml:native-dynlink}%\"\n  ]\n]\ndev-repo: \"git+https://github.com/ocaml/uchar.git\"\nurl {\n  src:\n    \"https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz\"\n  checksum: \"md5=c9ba2c738d264c420c642f7bb1cf4a36\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/topkg@opam:1.0.0": {
      "record": {
        "name": "@opam/topkg",
        "version": "opam:1.0.0",
        "source":
          "archive:http://erratique.ch/software/topkg/releases/topkg-1.0.0.tbz#md5:e3d76bda06bf68cb5853caf6627da603",
        "files": [],
        "opam": {
          "name": "topkg",
          "version": "1.0.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"topkg\"\nversion: \"1.0.0\"\nsynopsis: \"The transitory OCaml software packager\"\ndescription: \"\"\"\nTopkg is a packager for distributing OCaml software. It provides an\nAPI to describe the files a package installs in a given build\nconfiguration and to specify information about the package's\ndistribution, creation and publication procedures.\n\nThe optional topkg-care package provides the `topkg` command line tool\nwhich helps with various aspects of a package's life cycle: creating\nand linting a distribution, releasing it on the WWW, publish its\ndocumentation, add it to the OCaml opam repository, etc.\n\nTopkg is distributed under the ISC license and has **no**\ndependencies. This is what your packages will need as a *build*\ndependency.\n\nTopkg-care is distributed under the ISC license it depends on\n[fmt][fmt], [logs][logs], [bos][bos], [cmdliner][cmdliner],\n[webbrowser][webbrowser] and `opam-format`.\n\n[fmt]: http://erratique.ch/software/fmt\n[logs]: http://erratique.ch/software/logs\n[bos]: http://erratique.ch/software/bos\n[cmdliner]: http://erratique.ch/software/cmdliner\n[webbrowser]: http://erratique.ch/software/webbrowser\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"packaging\" \"ocamlbuild\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/topkg\"\ndoc: \"http://erratique.ch/software/topkg/doc\"\nbug-reports: \"https://github.com/dbuenzli/topkg/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build & >= \"1.6.1\"}\n  \"ocamlbuild\"\n  \"result\"\n]\nbuild: [\n  \"ocaml\" \"pkg/pkg.ml\" \"build\" \"--pkg-name\" name \"--dev-pkg\" \"%{pinned}%\"\n]\ndev-repo: \"git+http://erratique.ch/repos/topkg.git\"\nurl {\n  src: \"http://erratique.ch/software/topkg/releases/topkg-1.0.0.tbz\"\n  checksum: \"md5=e3d76bda06bf68cb5853caf6627da603\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/stringext@opam:1.5.0": {
      "record": {
        "name": "@opam/stringext",
        "version": "opam:1.5.0",
        "source":
          "archive:https://github.com/rgrinberg/stringext/archive/1.5.0.zip#md5:867263ea97532f150516677fa994cdf2",
        "files": [],
        "opam": {
          "name": "stringext",
          "version": "1.5.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"stringext\"\nversion: \"1.5.0\"\nsynopsis: \"Extra string functions for OCaml\"\ndescription: \"\"\"\nExtra string functions for OCaml. Mainly splitting. All functions are in the\n`Stringext` module.\"\"\"\nmaintainer: \"rudi.grinberg@gmail.com\"\nauthors: \"Rudi Grinberg\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/rgrinberg/stringext\"\nbug-reports: \"https://github.com/rgrinberg/stringext/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"ounit\" {with-test}\n  \"qtest\" {with-test & >= \"2.2\"}\n  \"base-bytes\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/rgrinberg/stringext.git\"\nurl {\n  src: \"https://github.com/rgrinberg/stringext/archive/1.5.0.zip\"\n  checksum: \"md5=867263ea97532f150516677fa994cdf2\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1000"
      ]
    },
    "@opam/stdio@opam:v0.11.0": {
      "record": {
        "name": "@opam/stdio",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/stdio-v0.11.0.tar.gz#md5:2db42ee38c91b3ff7126c2634c407b99",
        "files": [],
        "opam": {
          "name": "stdio",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"stdio\"\nversion: \"v0.11.0\"\nsynopsis: \"Standard IO library for OCaml\"\ndescription: \"\"\"\nStdio implements simple input/output functionalities for OCaml.\n\nIt re-exports the input/output functions of the OCaml standard\nlibraries using a more consistent API.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/stdio\"\nbug-reports: \"https://github.com/janestreet/stdio/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"base\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/stdio.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/stdio-v0.11.0.tar.gz\"\n  checksum: \"md5=2db42ee38c91b3ff7126c2634c407b99\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.11.1",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1000"
      ]
    },
    "@opam/simple-diff@opam:0.3": {
      "record": {
        "name": "@opam/simple-diff",
        "version": "opam:0.3",
        "source":
          "archive:https://github.com/gjaldon/simple-diff/archive/v0.3.tar.gz#md5:4751d72fe03c4b3cc45ad6476bcbe558",
        "files": [],
        "opam": {
          "name": "simple-diff",
          "version": "0.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"simple-diff\"\nversion: \"0.3\"\nsynopsis: \"Simple_diff is a pure OCaml diffing algorithm.\"\ndescription: \"\"\"\nThis diffing algorithm is a port of https://github.com/paulgb/simplediff with\nsome minor differences in the implementation.\"\"\"\nmaintainer: \"Gabriel Jaldon <gjaldon85@gmail.com>\"\nauthors: \"Gabriel Jaldon\"\nlicense: \"ISC\"\nhomepage: \"https://github.com/gjaldon/simple_diff\"\ndoc: \"https://gjaldon.github.io/simple-diff/\"\nbug-reports: \"https://github.com/gjaldon/simple_diff/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.00.0\"}\n  \"topkg\" {build}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"re\" {>= \"1.7.1\"}\n]\nbuild: [\"ocaml\" \"pkg/pkg.ml\" \"build\" \"--pinned\" \"%{pinned}%\"]\ndev-repo: \"git+https://github.com/gjaldon/simple_diff.git\"\nurl {\n  src: \"https://github.com/gjaldon/simple-diff/archive/v0.3.tar.gz\"\n  checksum: \"md5=4751d72fe03c4b3cc45ad6476bcbe558\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/re@opam:1.8.0",
        "@opam/topkg@opam:1.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/sexplib0@opam:v0.11.0": {
      "record": {
        "name": "@opam/sexplib0",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/sexplib0-v0.11.0.tar.gz#md5:1c14ba30b471e49f1b23fea5ff99ea6b",
        "files": [],
        "opam": {
          "name": "sexplib0",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"sexplib0\"\nversion: \"v0.11.0\"\nsynopsis:\n  \"Library containing the definition of S-expressions and some base converters\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/sexplib0\"\nbug-reports: \"https://github.com/janestreet/sexplib0/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n]\nconflicts: [\n  \"sexplib\" {< \"v0.11\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/sexplib0.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/sexplib0-v0.11.0.tar.gz\"\n  checksum: \"md5=1c14ba30b471e49f1b23fea5ff99ea6b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/sexplib@opam:v0.11.0": {
      "record": {
        "name": "@opam/sexplib",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/sexplib-v0.11.0.tar.gz#md5:1d53d945914b6b9a380dc8923f19e9ae",
        "files": [],
        "opam": {
          "name": "sexplib",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"sexplib\"\nversion: \"v0.11.0\"\nsynopsis: \"Library for serializing OCaml values to and from S-expressions\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/sexplib\"\nbug-reports: \"https://github.com/janestreet/sexplib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"parsexp\" {>= \"v0.11\" & < \"v0.12\"}\n  \"sexplib0\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n  \"num\"\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/sexplib.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/sexplib-v0.11.0.tar.gz\"\n  checksum: \"md5=1d53d945914b6b9a380dc8923f19e9ae\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/num@opam:1.1", "@opam/parsexp@opam:v0.11.0",
        "@opam/sexplib0@opam:v0.11.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/seq@opam:base": {
      "record": {
        "name": "@opam/seq",
        "version": "opam:base",
        "source": "no-source:",
        "files": [
          {
            "name": "seq.install",
            "content": "lib:[\n  \"META.seq\" {\"META\"}\n]\n"
          },
          {
            "name": "META.seq",
            "content":
              "name=\"seq\"\nversion=\"[distributed with OCaml 4.07 or above]\"\ndescription=\"dummy backward-compatibility package for iterators\"\nrequires=\"\"\n"
          }
        ],
        "opam": {
          "name": "seq",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"seq\"\nversion: \"base\"\nsynopsis:\n  \"Compatibility package for OCaml's standard iterator type starting from 4.07.\"\nmaintainer: \" \"\nauthors: \" \"\nhomepage: \" \"\nbug-reports: \"https://caml.inria.fr/mantis/main_page.php\"\ndepends: [\n  \"ocaml\" {>= \"4.07.0\"}\n]\ndev-repo: \"git+https://github.com/ocaml/ocaml.git\"\nextra-files: [\n  [\"seq.install\" \"md5=026b31e1df290373198373d5aaa26e42\"]\n  [\"META.seq\" \"md5=b33c8a1a6c7ed797816ce27df4855107\"]\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1", "ocaml@4.7.1000" ]
    },
    "@opam/result@opam:1.3": {
      "record": {
        "name": "@opam/result",
        "version": "opam:1.3",
        "source":
          "archive:https://github.com/janestreet/result/releases/download/1.3/result-1.3.tbz#md5:4beebefd41f7f899b6eeba7414e7ae01",
        "files": [],
        "opam": {
          "name": "result",
          "version": "1.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"result\"\nversion: \"1.3\"\nsynopsis: \"Compatibility Result module\"\ndescription: \"\"\"\nProjects that want to use the new result type defined in OCaml >= 4.03\nwhile staying compatible with older version of OCaml should use the\nResult module defined in this library.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"BSD3\"\nhomepage: \"https://github.com/janestreet/result\"\nbug-reports: \"https://github.com/janestreet/result/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta11\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/result.git\"\nurl {\n  src:\n    \"https://github.com/janestreet/result/releases/download/1.3/result-1.3.tbz\"\n  checksum: \"md5=4beebefd41f7f899b6eeba7414e7ae01\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/re@opam:1.8.0": {
      "record": {
        "name": "@opam/re",
        "version": "opam:1.8.0",
        "source":
          "archive:https://github.com/ocaml/ocaml-re/releases/download/1.8.0/re-1.8.0.tbz#md5:765f6f8d3e6ab200866e719ed7e5178d",
        "files": [],
        "opam": {
          "name": "re",
          "version": "1.8.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"re\"\nversion: \"1.8.0\"\nsynopsis: \"RE is a regular expression library for OCaml\"\ndescription: \"\"\"\nPure OCaml regular expressions with:\n* Perl-style regular expressions (module Re.Perl)\n* Posix extended regular expressions (module Re.Posix)\n* Emacs-style regular expressions (module Re.Emacs)\n* Shell-style file globbing (module Re.Glob)\n* Compatibility layer for OCaml's built-in Str module (module Re.Str)\"\"\"\nmaintainer: \"rudi.grinberg@gmail.com\"\nauthors: [\n  \"Jerome Vouillon\"\n  \"Thomas Gazagnaire\"\n  \"Anil Madhavapeddy\"\n  \"Rudi Grinberg\"\n  \"Gabriel Radanne\"\n]\nlicense: \"LGPL-2.0 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/ocaml-re\"\nbug-reports: \"https://github.com/ocaml/ocaml-re/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"ounit\" {with-test}\n  \"seq\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-n\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/ocaml/ocaml-re.git\"\nurl {\n  src:\n    \"https://github.com/ocaml/ocaml-re/releases/download/1.8.0/re-1.8.0.tbz\"\n  checksum: \"md5=765f6f8d3e6ab200866e719ed7e5178d\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/seq@opam:base", "ocaml@4.7.1000"
      ]
    },
    "@opam/ppxlib@opam:0.3.1": {
      "record": {
        "name": "@opam/ppxlib",
        "version": "opam:0.3.1",
        "source":
          "archive:https://github.com/ocaml-ppx/ppxlib/releases/download/0.3.1/ppxlib-0.3.1.tbz#md5:d83dd03bc744651d4642b84063bffcf9",
        "files": [],
        "opam": {
          "name": "ppxlib",
          "version": "0.3.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppxlib\"\nversion: \"0.3.1\"\nsynopsis: \"\"\ndescription: \"\"\"\nA comprehensive toolbox for ppx development. It features:\n- a OCaml AST / parser / pretty-printer snapshot,to create a full\n   frontend independent of the version of OCaml;\n- a library for library for ppx rewriters in general, and type-driven\n  code generators in particular;\n- a feature-full driver for OCaml AST transformers;\n- a quotation mechanism allowing  to write values representing the\n   OCaml AST in the OCaml syntax;\n- a generator of open recursion classes from type definitions.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml-ppx/ppxlib\"\ndoc: \"https://ocaml-ppx.github.io/ppxlib/\"\nbug-reports: \"https://github.com/ocaml-ppx/ppxlib/issues\"\ndepends: [\n  \"base\" {>= \"v0.11.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n  \"ocaml-compiler-libs\" {>= \"v0.11.0\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0.9\"}\n  \"ppx_derivers\" {>= \"1.0\"}\n  \"stdio\" {>= \"v0.11.0\"}\n  \"ocaml\" {>= \"4.04.1\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/ocaml-ppx/ppxlib.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-ppx/ppxlib/releases/download/0.3.1/ppxlib-0.3.1.tbz\"\n  checksum: \"md5=d83dd03bc744651d4642b84063bffcf9\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.11.1",
        "@opam/jbuilder@opam:transition",
        "@opam/ocaml-compiler-libs@opam:v0.11.0",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ppx_derivers@opam:1.0", "@opam/stdio@opam:v0.11.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_tools_versioned@opam:5.2.1": {
      "record": {
        "name": "@opam/ppx_tools_versioned",
        "version": "opam:5.2.1",
        "source":
          "archive:https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.1.tar.gz#md5:1ae6ae43ec161fbbf12c2b4d3a7e26f5",
        "files": [],
        "opam": {
          "name": "ppx_tools_versioned",
          "version": "5.2.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_tools_versioned\"\nversion: \"5.2.1\"\nsynopsis: \"A variant of ppx_tools based on ocaml-migrate-parsetree\"\nmaintainer: \"frederic.bour@lakaban.net\"\nauthors: [\n  \"Fr辿d辿ric Bour <frederic.bour@lakaban.net>\"\n  \"Alain Frisch <alain.frisch@lexifi.com>\"\n]\nlicense: \"MIT\"\ntags: \"syntax\"\nhomepage: \"https://github.com/let-def/ppx_tools_versioned\"\nbug-reports: \"https://github.com/let-def/ppx_tools_versioned/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta17\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0.10\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git://github.com/let-def/ppx_tools_versioned.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.1.tar.gz\"\n  checksum: \"md5=1ae6ae43ec161fbbf12c2b4d3a7e26f5\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_tools@opam:5.1+4.06.0": {
      "record": {
        "name": "@opam/ppx_tools",
        "version": "opam:5.1+4.06.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ppx_tools/archive/5.1+4.06.0.tar.gz#md5:6ba2e9690b1f579ba562b86022d1c308",
        "files": [],
        "opam": {
          "name": "ppx_tools",
          "version": "5.1+4.06.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_tools\"\nversion: \"5.1+4.06.0\"\nsynopsis: \"Tools for authors of ppx rewriters and other syntactic tools\"\nmaintainer: \"alain.frisch@lexifi.com\"\nauthors: \"Alain Frisch <alain.frisch@lexifi.com>\"\nlicense: \"MIT\"\ntags: \"syntax\"\nhomepage: \"https://github.com/ocaml-ppx/ppx_tools\"\nbug-reports: \"https://github.com/ocaml-ppx/ppx_tools/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.06.0\" & < \"4.08\"}\n  \"ocamlfind\" {>= \"1.5.0\"}\n]\nflags: light-uninstall\nbuild: [make \"all\"]\ninstall: [make \"install\"]\nremove: [\"ocamlfind\" \"remove\" \"ppx_tools\"]\ndev-repo: \"git://github.com/ocaml-ppx/ppx_tools.git\"\nurl {\n  src: \"https://github.com/ocaml-ppx/ppx_tools/archive/5.1+4.06.0.tar.gz\"\n  checksum: \"md5=6ba2e9690b1f579ba562b86022d1c308\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_sexp_conv@opam:v0.11.2": {
      "record": {
        "name": "@opam/ppx_sexp_conv",
        "version": "opam:v0.11.2",
        "source":
          "archive:https://github.com/janestreet/ppx_sexp_conv/archive/v0.11.2.tar.gz#md5:77d3b30b3d9c5810552bde2027656b8d",
        "files": [],
        "opam": {
          "name": "ppx_sexp_conv",
          "version": "v0.11.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_sexp_conv\"\nversion: \"v0.11.2\"\nsynopsis:\n  \"Generation of S-expression conversion functions from type definitions\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/ppx_sexp_conv\"\nbug-reports: \"https://github.com/janestreet/ppx_sexp_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"base\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0\"}\n  \"ppxlib\" {>= \"0.3.0\"}\n]\nconflicts: [\n  \"jbuilder\" {= \"1.0+beta19\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_sexp_conv.git\"\nurl {\n  src: \"https://github.com/janestreet/ppx_sexp_conv/archive/v0.11.2.tar.gz\"\n  checksum: \"md5=77d3b30b3d9c5810552bde2027656b8d\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.11.1",
        "@opam/jbuilder@opam:transition",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ppxlib@opam:0.3.1", "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_fields_conv@opam:v0.11.0": {
      "record": {
        "name": "@opam/ppx_fields_conv",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/ppx_fields_conv-v0.11.0.tar.gz#md5:72f207c23d65f7f3eaabcc92e33ccdab",
        "files": [],
        "opam": {
          "name": "ppx_fields_conv",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_fields_conv\"\nversion: \"v0.11.0\"\nsynopsis: \"Generation of accessor and iteration functions for ocaml records\"\ndescription: \"Part of the Jane Street's PPX rewriters collection.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/ppx_fields_conv\"\nbug-reports: \"https://github.com/janestreet/ppx_fields_conv/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"base\" {>= \"v0.11\" & < \"v0.12\"}\n  \"fieldslib\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0\"}\n  \"ppxlib\" {>= \"0.1.0\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ppx_fields_conv.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/ppx_fields_conv-v0.11.0.tar.gz\"\n  checksum: \"md5=72f207c23d65f7f3eaabcc92e33ccdab\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.11.1",
        "@opam/fieldslib@opam:v0.11.0", "@opam/jbuilder@opam:transition",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ppxlib@opam:0.3.1", "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_deriving@opam:4.2.1": {
      "record": {
        "name": "@opam/ppx_deriving",
        "version": "opam:4.2.1",
        "source":
          "archive:https://github.com/ocaml-ppx/ppx_deriving/archive/v4.2.1.tar.gz#md5:2195fccf2a527c3ff9ec5b4e36e2f0a8",
        "files": [
          {
            "name": "ppx_deriving-4.2.1.patch",
            "content":
              "--- ./pkg/topkg.ml\n+++ ./pkg/topkg.ml\n@@ -152,7 +152,63 @@\n module Exts : Exts = struct\n   let interface = [\".mli\"; \".cmi\"; \".cmti\"]\n   let interface_opt = \".cmx\" :: interface\n-  let c_library = if Sys.win32 then [\".lib\"] else [\".a\"]\n+  let c_library =\n+    match Sys.win32 with\n+    | false -> [\".a\"]\n+    | true ->\n+      let input_line ch =\n+        try\n+          let s = input_line ch in\n+          let len = String.length s in\n+          if len > 0 && Sys.os_type = \"Win32\" && s.[len-1] = '\\r' then\n+            Some (String.sub s 0 (pred len))\n+          else\n+            Some s\n+        with\n+        | End_of_file -> None\n+      in\n+      let rec get_ext_lib ch =\n+        match input_line ch with\n+        | None -> \".a\"\n+        | Some s ->\n+          let len = String.length s in\n+          if len < 11 || s.[0] <> 'e' || String.sub s 0 9 <> \"ext_lib: \" then\n+            get_ext_lib ch\n+          else\n+            String.sub s 9 (len - 9)\n+      in\n+      let get_ext_lib fln =\n+        let ch = open_in fln in\n+        let ch_closed = ref false in\n+        try\n+          let res = get_ext_lib ch in\n+          ch_closed := true;\n+          close_in ch ;\n+          res\n+        with\n+        | x when !ch_closed = false ->\n+          close_in_noerr ch;\n+          raise x\n+      in\n+      let e_null = if Sys.win32 then \" 2>NUL\" else \" 2>/dev/null\" in\n+      let fln = Filename.temp_file \"get_ext\" \".txt\" in\n+      let cleanup = lazy (try Sys.remove fln with Sys_error _ -> ()) in\n+      try\n+        let qfln = Filename.quote fln in\n+        let cmd = \"ocamlfind ocamlc -config > \" ^ qfln ^ e_null in\n+        let ec = Sys.command cmd in\n+        if ec <> 0 then (\n+          let cmd = \"ocamlc -config > \" ^ qfln ^ e_null in\n+          let ec = Sys.command cmd in\n+          if ec <> 0 then\n+            failwith (Printf.sprintf \"couldn't call ocamlc -config\");\n+        );\n+        let res = get_ext_lib fln in\n+        Lazy.force cleanup;\n+        [res]\n+      with\n+      | x -> Lazy.force cleanup; raise x\n+\n   let c_dll_library = if Sys.win32 then [\".dll\"] else [\".so\"]\n   let library = [\".cma\"; \".cmxa\"; \".cmxs\"] @ c_library\n   let module_library = (interface_opt @ library)\n@@ -258,7 +314,9 @@\n     let src, dst =\n       if not auto then src, dst else\n       let dst = match dst with\n-      | None -> Some (Filename.basename src)\n+      | None ->\n+        let src = if Sys.os_type <> \"Win32\" then src else src ^ \".exe\" in\n+        Some (Filename.basename src)\n       | Some _ as dst -> dst\n       in\n       let src = if Env.native then src ^ \".native\" else src ^ \".byte\" in\n"
          }
        ],
        "opam": {
          "name": "ppx_deriving",
          "version": "4.2.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_deriving\"\nversion: \"4.2.1\"\nsynopsis: \"Type-driven code generation for OCaml >=4.02\"\ndescription: \"\"\"\nppx_deriving provides common infrastructure for generating\ncode based on type definitions, and a set of useful plugins\nfor common tasks.\"\"\"\nmaintainer: \"whitequark <whitequark@whitequark.org>\"\nauthors: \"whitequark <whitequark@whitequark.org>\"\nlicense: \"MIT\"\ntags: \"syntax\"\nhomepage: \"https://github.com/whitequark/ppx_deriving\"\ndoc: \"https://whitequark.github.io/ppx_deriving\"\nbug-reports: \"https://github.com/whitequark/ppx_deriving/issues\"\ndepends: [\n  \"ocaml\" {> \"4.03.0\"}\n  \"ocamlbuild\" {build}\n  \"ocamlfind\" {build & >= \"1.6.0\"}\n  \"cppo\" {build}\n  \"cppo_ocamlbuild\" {build}\n  \"ocaml-migrate-parsetree\"\n  \"ppx_derivers\"\n  \"ppx_tools\" {>= \"4.02.3\"}\n  \"result\"\n  \"ounit\" {with-test}\n]\navailable: opam-version >= \"1.2\"\nbuild: [\n  [\n    \"ocaml\"\n    \"pkg/build.ml\"\n    \"native=%{ocaml:native-dynlink}%\"\n    \"native-dynlink=%{ocaml:native-dynlink}%\"\n  ]\n  [\n    \"ocamlbuild\"\n    \"-classic-display\"\n    \"-use-ocamlfind\"\n    \"src_test/test_ppx_deriving.byte\"\n    \"--\"\n  ] {with-test}\n  [make \"doc\"] {with-doc}\n]\nsubsts: \"pkg/META\"\ndev-repo: \"git+https://github.com/whitequark/ppx_deriving.git\"\nurl {\n  src: \"https://github.com/ocaml-ppx/ppx_deriving/archive/v4.2.1.tar.gz\"\n  checksum: \"md5=2195fccf2a527c3ff9ec5b4e36e2f0a8\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < ppx_deriving-4.2.1.patch' : 'true'}"
              ],
              [
                "ocaml", "pkg/build.ml", "native=true", "native-dynlink=true"
              ]
            ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/cppo_ocamlbuild@opam:1.6.0",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ocamlbuild@opam:0.12.0", "@opam/ocamlfind@opam:1.8.0",
        "@opam/ppx_derivers@opam:1.0", "@opam/ppx_tools@opam:5.1+4.06.0",
        "@opam/result@opam:1.3", "ocaml@4.7.1000"
      ]
    },
    "@opam/ppx_derivers@opam:1.0": {
      "record": {
        "name": "@opam/ppx_derivers",
        "version": "opam:1.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ppx_derivers/archive/1.0.tar.gz#md5:4ddce8f43fdb9b0ef0ab6a7cbfebc3e3",
        "files": [],
        "opam": {
          "name": "ppx_derivers",
          "version": "1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ppx_derivers\"\nversion: \"1.0\"\nsynopsis: \"Shared [@@deriving] plugin registry\"\ndescription: \"\"\"\nPpx_derivers is a tiny package whose sole purpose is to allow\nppx_deriving and ppx_type_conv to inter-operate gracefully when linked\nas part of the same ocaml-migrate-parsetree driver.\"\"\"\nmaintainer: \"jeremie@dimino.org\"\nauthors: \"J辿r辿mie Dimino\"\nlicense: \"BSD3\"\nhomepage: \"https://github.com/ocaml-ppx/ppx_derivers\"\nbug-reports: \"https://github.com/ocaml-ppx/ppx_derivers/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git://github.com/ocaml-ppx/ppx_derivers.git\"\nurl {\n  src: \"https://github.com/ocaml-ppx/ppx_derivers/archive/1.0.tar.gz\"\n  checksum: \"md5=4ddce8f43fdb9b0ef0ab6a7cbfebc3e3\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/parsexp@opam:v0.11.0": {
      "record": {
        "name": "@opam/parsexp",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/parsexp-v0.11.0.tar.gz#md5:816fce8d14b71a379296577c803bdbca",
        "files": [],
        "opam": {
          "name": "parsexp",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"parsexp\"\nversion: \"v0.11.0\"\nsynopsis: \"S-expression parsing library\"\ndescription: \"\"\"\nThis library provides generic parsers for parsing S-expressions from\nstrings or other medium.\n\nThe library is focused on performances but still provide full generic\nparsers that can be used with strings, bigstrings, lexing buffers,\ncharacter streams or any other sources effortlessly.\n\nIt provides three different class of parsers:\n- the normal parsers, producing [Sexp.t] or [Sexp.t list] values\n- the parsers with positions, building compact position sequences so\n  that one can recover original positions in order to report properly\n  located errors at little cost\n- the Concrete Syntax Tree parsers, produce values of type\n  [Parsexp.Cst.t] which record the concrete layout of the s-expression\n  syntax, including comments\n\nThis library is portable and doesn't provide IO functions. To read\ns-expressions from files or other external sources, you should use\nparsexp_io.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/parsexp\"\nbug-reports: \"https://github.com/janestreet/parsexp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"sexplib0\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/parsexp.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/parsexp-v0.11.0.tar.gz\"\n  checksum: \"md5=816fce8d14b71a379296577c803bdbca\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/sexplib0@opam:v0.11.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/ocamlfind@opam:1.8.0": {
      "record": {
        "name": "@opam/ocamlfind",
        "version": "opam:1.8.0",
        "source": [
          "archive:http://download.camlcity.org/download/findlib-1.8.0.tar.gz#md5:a710c559667672077a93d34eb6a42e5b",
          "archive:http://download2.camlcity.org/download/findlib-1.8.0.tar.gz#md5:a710c559667672077a93d34eb6a42e5b"
        ],
        "files": [
          {
            "name": "ocaml-stub",
            "content":
              "#!/bin/sh\n\nBINDIR=$(dirname \"$(command -v ocamlc)\")\n\"$BINDIR/ocaml\" -I \"$OCAML_TOPLEVEL_PATH\" \"$@\"\n"
          },
          {
            "name": "ocamlfind.install",
            "content":
              "bin: [\n  \"src/findlib/ocamlfind\" {\"ocamlfind\"}\n  \"?src/findlib/ocamlfind_opt\" {\"ocamlfind\"}\n  \"?tools/safe_camlp4\"\n]\ntoplevel: [\"src/findlib/topfind\"]\n"
          },
          {
            "name": "findlib-1.8.0.patch",
            "content":
              "--- ./Makefile\n+++ ./Makefile\n@@ -57,16 +57,16 @@\n \tcat findlib.conf.in | \\\n \t    $(SH) tools/patch '@SITELIB@' '$(OCAML_SITELIB)' >findlib.conf\n \tif ./tools/cmd_from_same_dir ocamlc; then \\\n-\t\techo 'ocamlc=\"ocamlc.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamlc=\"ocamlc.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamlopt; then \\\n-\t\techo 'ocamlopt=\"ocamlopt.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamlopt=\"ocamlopt.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamldep; then \\\n-\t\techo 'ocamldep=\"ocamldep.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamldep=\"ocamldep.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \tif ./tools/cmd_from_same_dir ocamldoc; then \\\n-\t\techo 'ocamldoc=\"ocamldoc.opt\"' >>findlib.conf; \\\n+\t\techo 'ocamldoc=\"ocamldoc.opt$(EXEC_SUFFIX)\"' >>findlib.conf; \\\n \tfi\n \n .PHONY: install-doc\n--- ./src/findlib/findlib_config.mlp\n+++ ./src/findlib/findlib_config.mlp\n@@ -24,3 +24,5 @@\n     | \"MacOS\" -> \"\"        (* don't know *)\n     | _ -> failwith \"Unknown Sys.os_type\"\n ;;\n+\n+let exec_suffix = \"@EXEC_SUFFIX@\";;\n--- ./src/findlib/findlib.ml\n+++ ./src/findlib/findlib.ml\n@@ -28,15 +28,20 @@\n let conf_ldconf = ref \"\";;\n let conf_ignore_dups_in = ref ([] : string list);;\n \n-let ocamlc_default = \"ocamlc\";;\n-let ocamlopt_default = \"ocamlopt\";;\n-let ocamlcp_default = \"ocamlcp\";;\n-let ocamloptp_default = \"ocamloptp\";;\n-let ocamlmklib_default = \"ocamlmklib\";;\n-let ocamlmktop_default = \"ocamlmktop\";;\n-let ocamldep_default = \"ocamldep\";;\n-let ocamlbrowser_default = \"ocamlbrowser\";;\n-let ocamldoc_default = \"ocamldoc\";;\n+let add_exec str =\n+  match Findlib_config.exec_suffix with\n+  | \"\" -> str\n+  | a  -> str ^ a ;;\n+let ocamlc_default = add_exec \"ocamlc\";;\n+let ocamlopt_default = add_exec \"ocamlopt\";;\n+let ocamlcp_default = add_exec \"ocamlcp\";;\n+let ocamloptp_default = add_exec \"ocamloptp\";;\n+let ocamlmklib_default = add_exec \"ocamlmklib\";;\n+let ocamlmktop_default = add_exec \"ocamlmktop\";;\n+let ocamldep_default = add_exec \"ocamldep\";;\n+let ocamlbrowser_default = add_exec \"ocamlbrowser\";;\n+let ocamldoc_default = add_exec \"ocamldoc\";;\n+\n \n \n let init_manually \n--- ./src/findlib/fl_package_base.ml\n+++ ./src/findlib/fl_package_base.ml\n@@ -133,7 +133,15 @@\n \t  List.find (fun def -> def.def_var = \"exists_if\") p.package_defs  in\n \tlet files = Fl_split.in_words def.def_value in\n \tList.exists \n-\t  (fun file -> Sys.file_exists (Filename.concat d' file))\n+\t  (fun file ->\n+            let fln = Filename.concat d' file in\n+            let e = Sys.file_exists fln in\n+            (* necessary for ppx executables *)\n+            if e || Sys.os_type <> \"Win32\" || Filename.check_suffix fln \".exe\" then\n+              e\n+            else\n+              Sys.file_exists (fln ^ \".exe\")\n+          )\n \t  files\n       with Not_found -> true in\n \n--- ./src/findlib/fl_split.ml\n+++ ./src/findlib/fl_split.ml\n@@ -126,10 +126,17 @@\n     | '/' | '\\\\' -> true\n     | _ -> false in\n   let norm_dir_win() =\n-    if l >= 1 && s.[0] = '/' then\n-      Buffer.add_char b '\\\\' else Buffer.add_char b s.[0];\n-    if l >= 2 && s.[1] = '/' then\n-      Buffer.add_char b '\\\\' else Buffer.add_char b s.[1];\n+    if l >= 1 then (\n+      if s.[0] = '/' then\n+        Buffer.add_char b '\\\\'\n+      else\n+        Buffer.add_char b s.[0] ;\n+      if l >= 2 then\n+        if s.[1] = '/' then\n+          Buffer.add_char b '\\\\'\n+        else\n+          Buffer.add_char b s.[1];\n+    );\n     for k = 2 to l - 1 do\n       let c = s.[k] in\n       if is_slash c then (\n--- ./src/findlib/frontend.ml\n+++ ./src/findlib/frontend.ml\n@@ -31,10 +31,18 @@\n   else\n     Sys_error (arg ^ \": \" ^ Unix.error_message code)\n \n+let is_win = Sys.os_type = \"Win32\"\n+\n+let () =\n+  match Findlib_config.system with\n+    | \"win32\" | \"win64\" | \"mingw\" | \"cygwin\" | \"mingw64\" | \"cygwin64\" ->\n+      (try set_binary_mode_out stdout true with _ -> ());\n+      (try set_binary_mode_out stderr true with _ -> ());\n+    | _ -> ()\n \n let slashify s =\n   match Findlib_config.system with\n-    | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n+    | \"win32\" | \"win64\" | \"mingw\" | \"cygwin\" | \"mingw64\" | \"cygwin64\" ->\n         let b = Buffer.create 80 in\n         String.iter\n           (function\n@@ -49,7 +57,7 @@\n \n let out_path ?(prefix=\"\") s =\n   match Findlib_config.system with\n-    | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n+   | \"win32\" | \"win64\" | \"mingw\" | \"mingw64\" | \"cygwin\" ->\n \tlet u = slashify s in\n \tprefix ^ \n \t  (if String.contains u ' ' then\n@@ -273,11 +281,9 @@\n \n \n let identify_dir d =\n-  match Sys.os_type with\n-    | \"Win32\" ->\n-\tfailwith \"identify_dir\"   (* not available *)\n-    | _ ->\n-\tlet s = Unix.stat d in\n+  if is_win then\n+    failwith \"identify_dir\";   (* not available *)\n+  let s = Unix.stat d in\n \t(s.Unix.st_dev, s.Unix.st_ino)\n ;;\n \n@@ -459,6 +465,96 @@\n       )\n       packages\n \n+let rewrite_cmd s =\n+  if s = \"\" || not is_win then\n+    s\n+  else\n+    let s =\n+      let l = String.length s in\n+      let b = Buffer.create l in\n+      for i = 0 to pred l do\n+        match s.[i] with\n+        | '/' -> Buffer.add_char b '\\\\'\n+        | x -> Buffer.add_char b x\n+      done;\n+      Buffer.contents b\n+    in\n+    if (Filename.is_implicit s && String.contains s '\\\\' = false) ||\n+      Filename.check_suffix (String.lowercase s) \".exe\" then\n+      s\n+    else\n+      let s' = s ^ \".exe\" in\n+      if Sys.file_exists s' then\n+        s'\n+      else\n+        s\n+\n+let rewrite_cmd s =\n+  if s = \"\" || not is_win then s else\n+  let s =\n+    let l = String.length s in\n+    let b = Buffer.create l in\n+    for i = 0 to pred l do\n+      match s.[i] with\n+      | '/' -> Buffer.add_char b '\\\\'\n+      | x -> Buffer.add_char b x\n+    done;\n+    Buffer.contents b\n+  in\n+  if (Filename.is_implicit s && String.contains s '\\\\' = false) ||\n+     Filename.check_suffix (String.lowercase s) \".exe\" then\n+    s\n+  else\n+    let s' = s ^ \".exe\" in\n+    if Sys.file_exists s' then\n+      s'\n+    else\n+      s\n+\n+let rewrite_pp cmd =\n+  if not is_win then cmd else\n+  let module T = struct exception Keep end in\n+  let is_whitespace = function\n+  | ' ' | '\\011' | '\\012' | '\\n' | '\\r' | '\\t' -> true\n+  | _ -> false in\n+  (* characters that triggers special behaviour (cmd.exe, not unix shell) *)\n+  let is_unsafe_char = function\n+  | '(' | ')' | '%' | '!' | '^' | '<' | '>' | '&' -> true\n+  | _ -> false in\n+  let len = String.length cmd in\n+  let buf = Buffer.create (len + 4) in\n+  let buf_cmd = Buffer.create len in\n+  let rec iter_ws i =\n+    if i >= len then () else\n+    let cur = cmd.[i] in\n+    if is_whitespace cur then (\n+      Buffer.add_char buf cur;\n+      iter_ws (succ i)\n+    )\n+    else\n+      iter_cmd i\n+  and iter_cmd i =\n+    if i >= len then add_buf_cmd () else\n+    let cur = cmd.[i] in\n+    if is_unsafe_char cur || cur = '\"' || cur = '\\'' then\n+      raise T.Keep;\n+    if is_whitespace cur then (\n+      add_buf_cmd ();\n+      Buffer.add_substring buf cmd i (len - i)\n+    )\n+    else (\n+      Buffer.add_char buf_cmd cur;\n+      iter_cmd (succ i)\n+    )\n+  and add_buf_cmd () =\n+    if Buffer.length buf_cmd > 0 then\n+      Buffer.add_string buf (rewrite_cmd (Buffer.contents buf_cmd))\n+  in\n+  try\n+    iter_ws 0;\n+    Buffer.contents buf\n+  with\n+  | T.Keep -> cmd\n \n let process_pp_spec syntax_preds packages pp_opts =\n   (* Returns: pp_command *)\n@@ -549,7 +645,7 @@\n       None -> []\n     | Some cmd ->\n \t[\"-pp\";\n-\t cmd ^ \" \" ^\n+\t (rewrite_cmd cmd) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_i_options) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_archives) ^ \" \" ^\n \t String.concat \" \" (List.map Filename.quote pp_opts)]\n@@ -625,9 +721,11 @@\n           in\n           try\n             let preprocessor =\n+              rewrite_cmd (\n               resolve_path\n                 ~base ~explicit:true\n-                (package_property predicates pname \"ppx\") in\n+                  (package_property predicates pname \"ppx\") )\n+            in\n             [\"-ppx\"; String.concat \" \" (preprocessor :: options)]\n           with Not_found -> []\n        )\n@@ -895,6 +993,14 @@\n        switch (e.g. -L<path> instead of -L <path>)\n      *)\n \n+(* We may need to remove files on which we do not have complete control.\n+   On Windows, removing a read-only file fails so try to change the\n+   mode of the file first. *)\n+let remove_file fname =\n+  try Sys.remove fname\n+  with Sys_error _ when is_win ->\n+    (try Unix.chmod fname 0o666 with Unix.Unix_error _ -> ());\n+    Sys.remove fname\n \n let ocamlc which () =\n \n@@ -1022,9 +1128,12 @@\n               \n \t      \"-intf\", \n \t      Arg.String (fun s -> pass_files := !pass_files @ [ Intf(slashify s) ]);\n-              \n+\n \t      \"-pp\", \n-\t      Arg.String (fun s -> pp_specified := true; add_spec_fn \"-pp\" s);\n+\t      Arg.String (fun s -> pp_specified := true; add_spec_fn \"-pp\" (rewrite_pp s));\n+\n+              \"-ppx\",\n+              Arg.String (fun s -> add_spec_fn \"-ppx\" (rewrite_pp s));\n \t      \n \t      \"-thread\", \n \t      Arg.Unit (fun _ -> threads := threads_default);\n@@ -1237,7 +1346,7 @@\n     with\n       any ->\n \tclose_out initl;\n-\tSys.remove initl_file_name;\n+\tremove_file initl_file_name;\n \traise any\n   end;\n \n@@ -1245,9 +1354,9 @@\n     at_exit\n       (fun () ->\n \tlet tr f x = try f x with _ -> () in\n-\ttr Sys.remove initl_file_name;\n-\ttr Sys.remove (Filename.chop_extension initl_file_name ^ \".cmi\");\n-\ttr Sys.remove (Filename.chop_extension initl_file_name ^ \".cmo\");\n+\ttr remove_file initl_file_name;\n+\ttr remove_file (Filename.chop_extension initl_file_name ^ \".cmi\");\n+\ttr remove_file (Filename.chop_extension initl_file_name ^ \".cmo\");\n       );\n \n   let exclude_list = [ stdlibdir; threads_dir; vmthreads_dir ] in\n@@ -1493,7 +1602,9 @@\n \t  [ \"-v\", Arg.Unit (fun () -> verbose := Verbose);\n \t    \"-pp\", Arg.String (fun s ->\n \t\t\t\t pp_specified := true;\n-\t\t\t\t options := !options @ [\"-pp\"; s]);\n+\t\t\t\t options := !options @ [\"-pp\"; rewrite_pp s]);\n+            \"-ppx\", Arg.String (fun s ->\n+\t\t\t\t options := !options @ [\"-ppx\"; rewrite_pp s]);\n \t  ]\n       )\n     )\n@@ -1672,7 +1783,9 @@\n \t      Arg.String (fun s -> add_spec_fn \"-I\" (slashify (resolve_path s)));\n \n \t      \"-pp\", Arg.String (fun s -> pp_specified := true;\n-\t\t \t           add_spec_fn \"-pp\" s);\n+                           add_spec_fn \"-pp\" (rewrite_pp s));\n+              \"-ppx\", Arg.String (fun s -> add_spec_fn \"-ppx\" (rewrite_pp s));\n+\n \t    ]\n \t)\n     )\n@@ -1830,7 +1943,10 @@\n       output_string ch_out append;\n       close_out ch_out;\n       close_in ch_in;\n-      Unix.utimes outpath s.Unix.st_mtime s.Unix.st_mtime;\n+      (try Unix.utimes outpath s.Unix.st_mtime s.Unix.st_mtime\n+       with Unix.Unix_error(e,_,_) ->\n+         prerr_endline(\"Warning: setting utimes for \" ^ outpath\n+                       ^ \": \" ^ Unix.error_message e));\n \n       prerr_endline(\"Installed \" ^ outpath);\n     with\n@@ -1882,6 +1998,8 @@\n              Unix.openfile (Filename.concat dir owner_file) [Unix.O_RDONLY] 0 in\n            let f =\n              Unix.in_channel_of_descr fd in\n+           if is_win then\n+             set_binary_mode_in f false;\n            try\n              let line = input_line f in\n              let is_my_file = (line = pkg) in\n@@ -2208,7 +2326,7 @@\n     let lines = read_ldconf !ldconf in\n     let dlldir_norm = Fl_split.norm_dir dlldir in\n     let dlldir_norm_lc = string_lowercase_ascii dlldir_norm in\n-    let ci_filesys = (Sys.os_type = \"Win32\") in\n+    let ci_filesys = is_win in\n     let check_dir d =\n       let d' = Fl_split.norm_dir d in\n       (d' = dlldir_norm) || \n@@ -2356,7 +2474,7 @@\n       List.iter\n         (fun file ->\n            let absfile = Filename.concat dlldir file in\n-           Sys.remove absfile;\n+           remove_file absfile;\n            prerr_endline (\"Removed \" ^ absfile)\n         )\n         dll_files\n@@ -2365,7 +2483,7 @@\n     (* Remove the files from the package directory: *)\n     if Sys.file_exists pkgdir then begin\n       let files = Sys.readdir pkgdir in\n-      Array.iter (fun f -> Sys.remove (Filename.concat pkgdir f)) files;\n+      Array.iter (fun f -> remove_file (Filename.concat pkgdir f)) files;\n       Unix.rmdir pkgdir;\n       prerr_endline (\"Removed \" ^ pkgdir)\n     end\n@@ -2415,7 +2533,9 @@\n \n \n let print_configuration() =\n+  let sl = slashify in\n   let dir s =\n+    let s = sl s in\n     if Sys.file_exists s then\n       s\n     else\n@@ -2453,27 +2573,27 @@\n \t   if md = \"\" then \"the corresponding package directories\" else dir md\n \t  );\n \tPrintf.printf \"The standard library is assumed to reside in:\\n    %s\\n\"\n-\t  (Findlib.ocaml_stdlib());\n+    (sl (Findlib.ocaml_stdlib()));\n \tPrintf.printf \"The ld.conf file can be found here:\\n    %s\\n\"\n-\t  (Findlib.ocaml_ldconf());\n+    (sl (Findlib.ocaml_ldconf()));\n \tflush stdout\n     | Some \"conf\" ->\n-\tprint_endline Findlib_config.config_file\n+  print_endline (sl Findlib_config.config_file)\n     | Some \"path\" ->\n-\tList.iter print_endline (Findlib.search_path())\n+  List.iter ( fun x -> print_endline (sl x)) (Findlib.search_path())\n     | Some \"destdir\" ->\n-\tprint_endline (Findlib.default_location())\n+  print_endline ( sl (Findlib.default_location()))\n     | Some \"metadir\" ->\n-\tprint_endline (Findlib.meta_directory())\n+  print_endline ( sl (Findlib.meta_directory()))\n     | Some \"metapath\" ->\n         let mdir = Findlib.meta_directory() in\n         let ddir = Findlib.default_location() in\n-\tprint_endline \n-          (if mdir <> \"\" then mdir ^ \"/META.%s\" else ddir ^ \"/%s/META\")\n+  print_endline ( sl\n+          (if mdir <> \"\" then mdir ^ \"/META.%s\" else ddir ^ \"/%s/META\"))\n     | Some \"stdlib\" ->\n-\tprint_endline (Findlib.ocaml_stdlib())\n+  print_endline ( sl (Findlib.ocaml_stdlib()))\n     | Some \"ldconf\" ->\n-\tprint_endline (Findlib.ocaml_ldconf())\n+  print_endline ( sl (Findlib.ocaml_ldconf()))\n     | _ ->\n \tassert false\n ;;\n@@ -2481,7 +2601,7 @@\n \n let ocamlcall pkg cmd =\n   let dir = package_directory pkg in\n-  let path = Filename.concat dir cmd in\n+  let path = rewrite_cmd (Filename.concat dir cmd) in\n   begin\n     try Unix.access path [ Unix.X_OK ]\n     with\n@@ -2647,6 +2767,10 @@\n   | Sys_error f ->\n       prerr_endline (\"ocamlfind: \" ^ f);\n       exit 2\n+  | Unix.Unix_error (e, fn, f) ->\n+      prerr_endline (\"ocamlfind: \" ^ fn ^ \" \" ^ f\n+                     ^ \": \" ^ Unix.error_message e);\n+      exit 2\n   | Findlib.No_such_package(pkg,info) ->\n       prerr_endline (\"ocamlfind: Package `\" ^ pkg ^ \"' not found\" ^\n \t\t     (if info <> \"\" then \" - \" ^ info else \"\"));\n--- ./src/findlib/Makefile\n+++ ./src/findlib/Makefile\n@@ -90,6 +90,7 @@\n \tcat findlib_config.mlp | \\\n \t        $(SH) $(TOP)/tools/patch '@CONFIGFILE@' '$(OCAMLFIND_CONF)' | \\\n \t        $(SH) $(TOP)/tools/patch '@STDLIB@' '$(OCAML_CORE_STDLIB)' | \\\n+\t\t\t$(SH) $(TOP)/tools/patch '@EXEC_SUFFIX@' '$(EXEC_SUFFIX)' | \\\n \t\tsed -e 's;@AUTOLINK@;$(OCAML_AUTOLINK);g' \\\n \t\t    -e 's;@SYSTEM@;$(SYSTEM);g' \\\n \t\t     >findlib_config.ml\n@@ -113,7 +114,7 @@\n \t$(OCAMLC) -a -o num_top.cma $(NUMTOP_OBJECTS)\n \n clean:\n-\trm -f *.cmi *.cmo *.cma *.cmx *.a *.o *.cmxa \\\n+\trm -f *.cmi *.cmo *.cma *.cmx *.lib *.a *.o *.cmxa \\\n \t  fl_meta.ml findlib_config.ml findlib.mml topfind.ml topfind \\\n \t  ocamlfind$(EXEC_SUFFIX) ocamlfind_opt$(EXEC_SUFFIX)\n \n@@ -121,7 +122,7 @@\n \tmkdir -p \"$(prefix)$(OCAML_SITELIB)/$(NAME)\"\n \tmkdir -p \"$(prefix)$(OCAMLFIND_BIN)\"\n \ttest $(INSTALL_TOPFIND) -eq 0 || cp topfind \"$(prefix)$(OCAML_CORE_STDLIB)\"\n-\tfiles=`$(SH) $(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma findlib.cmxa findlib.a findlib.cmxs topfind.cmi topfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib_top.cmxa findlib_top.a findlib_top.cmxs findlib_dynload.cma findlib_dynload.cmxa findlib_dynload.a findlib_dynload.cmxs fl_dynload.mli fl_dynload.cmi META` && \\\n+\tfiles=`$(SH) $(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma findlib.cmxa findlib$(LIB_SUFFIX) findlib.cmxs topfind.cmi topfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib_top.cmxa findlib_top$(LIB_SUFFIX) findlib_top.cmxs findlib_dynload.cma findlib_dynload.cmxa findlib_dynload$(LIB_SUFFIX) findlib_dynload.cmxs fl_dynload.mli fl_dynload.cmi META` && \\\n \tcp $$files \"$(prefix)$(OCAML_SITELIB)/$(NAME)\"\n \tf=\"ocamlfind$(EXEC_SUFFIX)\"; { test -f ocamlfind_opt$(EXEC_SUFFIX) && f=\"ocamlfind_opt$(EXEC_SUFFIX)\"; }; \\\n \tcp $$f \"$(prefix)$(OCAMLFIND_BIN)/ocamlfind$(EXEC_SUFFIX)\"\n"
          }
        ],
        "opam": {
          "name": "ocamlfind",
          "version": "1.8.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlfind\"\nversion: \"1.8.0\"\nsynopsis: \"A library manager for OCaml\"\ndescription: \"\"\"\nFindlib is a library manager for OCaml. It provides a convention how\nto store libraries, and a file format (\"META\") to describe the\nproperties of libraries. There is also a tool (ocamlfind) for\ninterpreting the META files, so that it is very easy to use libraries\nin programs and scripts.\"\"\"\nmaintainer: \"Thomas Gazagnaire <thomas@gazagnaire.org>\"\nauthors: \"Gerd Stolpmann <gerd@gerd-stolpmann.de>\"\nhomepage: \"http://projects.camlcity.org/projects/findlib.html\"\nbug-reports: \"https://gitlab.camlcity.org/gerd/lib-findlib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.00.0\"}\n  \"conf-m4\" {build}\n]\nbuild: [\n  [\n    \"./configure\"\n    \"-bindir\"\n    bin\n    \"-sitelib\"\n    lib\n    \"-mandir\"\n    man\n    \"-config\"\n    \"%{lib}%/findlib.conf\"\n    \"-no-custom\"\n    \"-no-topfind\" {ocaml:preinstalled}\n  ]\n  [make \"all\"]\n  [make \"opt\"] {ocaml:native}\n]\ninstall: [\n  [make \"install\"]\n  [\"install\" \"-m\" \"0755\" \"ocaml-stub\" \"%{bin}%/ocaml\"] {ocaml:preinstalled}\n]\nremove: [\n  [\"ocamlfind\" \"remove\" \"bytes\"]\n  [\n    \"./configure\"\n    \"-bindir\"\n    bin\n    \"-sitelib\"\n    lib\n    \"-mandir\"\n    man\n    \"-config\"\n    \"%{lib}%/findlib.conf\"\n    \"-no-topfind\" {ocaml:preinstalled}\n  ]\n  [make \"uninstall\"]\n  [\"rm\" \"-f\" \"%{bin}%/ocaml\"] {ocaml:preinstalled}\n]\ndev-repo: \"git+https://gitlab.camlcity.org/gerd/lib-findlib.git\"\nextra-files: [\n  [\"ocamlfind.install\" \"md5=06f2c282ab52d93aa6adeeadd82a2543\"]\n  [\"ocaml-stub\" \"md5=181f259c9e0bad9ef523e7d4abfdf87a\"]\n]\nurl {\n  src: \"http://download.camlcity.org/download/findlib-1.8.0.tar.gz\"\n  checksum: \"md5=a710c559667672077a93d34eb6a42e5b\"\n  mirrors: \"http://download2.camlcity.org/download/findlib-1.8.0.tar.gz\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < findlib-1.8.0.patch' : 'true'}"
              ],
              [
                "./configure", "-bindir", "#{self.bin}", "-sitelib",
                "#{self.lib}", "-mandir", "#{self.man}", "-config",
                "#{self.lib}/findlib.conf", "-no-custom", "-no-topfind"
              ],
              [ "make", "all" ],
              [ "make", "opt" ]
            ],
            "install": [
              [ "make", "install" ],
              [ "install", "-m", "0755", "ocaml-stub", "#{self.bin}/ocaml" ],
              [ "mkdir", "-p", "#{self.toplevel}" ],
              [
                "install", "-m", "0644", "src/findlib/topfind",
                "#{self.toplevel}/topfind"
              ]
            ],
            "exportedEnv": {
              "OCAML_TOPLEVEL_PATH": {
                "val": "#{self.toplevel}",
                "scope": "global",
                "exclusive": false
              }
            }
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/conf-m4@opam:1", "ocaml@4.7.1000"
      ]
    },
    "@opam/ocamlbuild@opam:0.12.0": {
      "record": {
        "name": "@opam/ocamlbuild",
        "version": "opam:0.12.0",
        "source":
          "archive:https://github.com/ocaml/ocamlbuild/archive/0.12.0.tar.gz#md5:442baa19470bd49150f153122e22907b",
        "files": [
          {
            "name": "ocamlbuild-0.12.0.patch",
            "content":
              "--- ./Makefile\n+++ ./Makefile\n@@ -213,7 +213,7 @@\n \trm -f man/ocamlbuild.1\n \n man/options_man.byte: src/ocamlbuild_pack.cmo\n-\t$(OCAMLC) $^ -I src man/options_man.ml -o man/options_man.byte\n+\t$(OCAMLC) -I +unix unix.cma $^ -I src man/options_man.ml -o man/options_man.byte\n \n clean::\n \trm -f man/options_man.cm*\n--- ./src/command.ml\n+++ ./src/command.ml\n@@ -148,9 +148,10 @@\n   let self = string_of_command_spec_with_calls call_with_tags call_with_target resolve_virtuals in\n   let b = Buffer.create 256 in\n   (* The best way to prevent bash from switching to its windows-style\n-   * quote-handling is to prepend an empty string before the command name. *)\n+   * quote-handling is to prepend an empty string before the command name.\n+   * space seems to work, too - and the ouput is nicer *)\n   if Sys.os_type = \"Win32\" then\n-    Buffer.add_string b \"''\";\n+    Buffer.add_char b ' ';\n   let first = ref true in\n   let put_space () =\n     if !first then\n@@ -260,7 +261,7 @@\n \n let execute_many ?(quiet=false) ?(pretend=false) cmds =\n   add_parallel_stat (List.length cmds);\n-  let degraded = !*My_unix.is_degraded || Sys.os_type = \"Win32\" in\n+  let degraded = !*My_unix.is_degraded in\n   let jobs = !jobs in\n   if jobs < 0 then invalid_arg \"jobs < 0\";\n   let max_jobs = if jobs = 0 then None else Some jobs in\n--- ./src/findlib.ml\n+++ ./src/findlib.ml\n@@ -66,9 +66,6 @@\n     (fun command -> lexer & Lexing.from_string & run_and_read command)\n     command\n \n-let run_and_read command =\n-  Printf.ksprintf run_and_read command\n-\n let rec query name =\n   try\n     Hashtbl.find packages name\n@@ -135,7 +132,8 @@\n   with Not_found -> s\n \n let list () =\n-  List.map before_space (split_nl & run_and_read \"%s list\" ocamlfind)\n+  let cmd = Shell.quote_filename_if_needed ocamlfind ^ \" list\" in\n+  List.map before_space (split_nl & run_and_read cmd)\n \n (* The closure algorithm is easy because the dependencies are already closed\n and sorted for each package. We only have to make the union. We could also\n--- ./src/main.ml\n+++ ./src/main.ml\n@@ -162,6 +162,9 @@\n               Tags.mem \"traverse\" tags\n               || List.exists (Pathname.is_prefix path_name) !Options.include_dirs\n               || List.exists (Pathname.is_prefix path_name) target_dirs)\n+            && ((* beware: !Options.build_dir is an absolute directory *)\n+              Pathname.normalize !Options.build_dir\n+              <> Pathname.normalize (Pathname.pwd/path_name))\n           end\n         end\n       end\n--- ./src/my_std.ml\n+++ ./src/my_std.ml\n@@ -271,13 +271,107 @@\n       try Array.iter (fun x -> if x = basename then raise Exit) a; false\n       with Exit -> true\n \n+let command_plain = function\n+| [| |] -> 0\n+| margv ->\n+  let rec waitpid a b =\n+    match Unix.waitpid a b with\n+    | exception (Unix.Unix_error(Unix.EINTR,_,_)) -> waitpid a b\n+    | x -> x\n+  in\n+  let pid = Unix.(create_process margv.(0) margv stdin stdout stderr) in\n+  let pid', process_status = waitpid [] pid in\n+  assert (pid = pid');\n+  match process_status with\n+  | Unix.WEXITED n -> n\n+  | Unix.WSIGNALED _ -> 2 (* like OCaml's uncaught exceptions *)\n+  | Unix.WSTOPPED _ -> 127\n+\n+(* can't use Lexers because of circular dependency *)\n+let split_path_win str =\n+  let rec aux pos =\n+    try\n+      let i = String.index_from str pos ';' in\n+      let len = i - pos in\n+      if len = 0 then\n+        aux (succ i)\n+      else\n+        String.sub str pos (i - pos) :: aux (succ i)\n+    with Not_found | Invalid_argument _ ->\n+      let len = String.length str - pos in\n+      if len = 0 then [] else [String.sub str pos len]\n+  in\n+  aux 0\n+\n+let windows_shell = lazy begin\n+  let rec iter = function\n+  | [] -> [| \"bash.exe\" ; \"--norc\" ; \"--noprofile\" |]\n+  | hd::tl ->\n+    let dash = Filename.concat hd \"dash.exe\" in\n+    if Sys.file_exists dash then [|dash|] else\n+    let bash = Filename.concat hd \"bash.exe\" in\n+    if Sys.file_exists bash = false then iter tl else\n+    (* if sh.exe and bash.exe exist in the same dir, choose sh.exe *)\n+    let sh = Filename.concat hd \"sh.exe\" in\n+    if Sys.file_exists sh then [|sh|] else [|bash ; \"--norc\" ; \"--noprofile\"|]\n+  in\n+  split_path_win (try Sys.getenv \"PATH\" with Not_found -> \"\") |> iter\n+end\n+\n+let prep_windows_cmd cmd =\n+  (* workaround known ocaml bug, remove later *)\n+  if String.contains cmd '\\t' && String.contains cmd ' ' = false then\n+    \" \" ^ cmd\n+  else\n+    cmd\n+\n+let run_with_shell = function\n+| \"\" -> 0\n+| cmd ->\n+  let cmd = prep_windows_cmd cmd in\n+  let shell = Lazy.force windows_shell in\n+  let qlen = Filename.quote cmd |> String.length in\n+  (* old versions of dash had problems with bs *)\n+  try\n+    if qlen < 7_900 then\n+      command_plain (Array.append shell [| \"-ec\" ; cmd |])\n+    else begin\n+      (* it can still work, if the called command is a cygwin tool *)\n+      let ch_closed = ref false in\n+      let file_deleted = ref false in\n+      let fln,ch =\n+        Filename.open_temp_file\n+          ~mode:[Open_binary]\n+          \"ocamlbuildtmp\"\n+          \".sh\"\n+      in\n+      try\n+        let f_slash = String.map ( fun x -> if x = '\\\\' then '/' else x ) fln in\n+        output_string ch cmd;\n+        ch_closed:= true;\n+        close_out ch;\n+        let ret = command_plain (Array.append shell [| \"-e\" ; f_slash |]) in\n+        file_deleted:= true;\n+        Sys.remove fln;\n+        ret\n+      with\n+      | x ->\n+        if !ch_closed = false then\n+          close_out_noerr ch;\n+        if !file_deleted = false then\n+          (try Sys.remove fln with _ -> ());\n+        raise x\n+    end\n+  with\n+  | (Unix.Unix_error _) as x ->\n+    (* Sys.command doesn't raise an exception, so run_with_shell also won't\n+       raise *)\n+    Printexc.to_string x ^ \":\" ^ cmd |> prerr_endline;\n+    1\n+\n let sys_command =\n-  match Sys.os_type with\n-  | \"Win32\" -> fun cmd ->\n-      if cmd = \"\" then 0 else\n-      let cmd = \"bash --norc -c \" ^ Filename.quote cmd in\n-      Sys.command cmd\n-  | _ -> fun cmd -> if cmd = \"\" then 0 else Sys.command cmd\n+  if Sys.win32 then run_with_shell\n+  else fun cmd -> if cmd = \"\" then 0 else Sys.command cmd\n \n (* FIXME warning fix and use Filename.concat *)\n let filename_concat x y =\n--- ./src/my_std.mli\n+++ ./src/my_std.mli\n@@ -69,3 +69,6 @@\n \n val split_ocaml_version : (int * int * int * string) option\n (** (major, minor, patchlevel, rest) *)\n+\n+val windows_shell : string array Lazy.t\n+val prep_windows_cmd : string -> string\n--- ./src/ocamlbuild_executor.ml\n+++ ./src/ocamlbuild_executor.ml\n@@ -34,6 +34,8 @@\n   job_stdin   : out_channel;\n   job_stderr  : in_channel;\n   job_buffer  : Buffer.t;\n+  job_pid     : int;\n+  job_tmp_file: string option;\n   mutable job_dying : bool;\n };;\n \n@@ -76,6 +78,61 @@\n   in\n   loop 0\n ;;\n+\n+let open_process_full_win cmd env =\n+  let (in_read, in_write) = Unix.pipe () in\n+  let (out_read, out_write) = Unix.pipe () in\n+  let (err_read, err_write) = Unix.pipe () in\n+  Unix.set_close_on_exec in_read;\n+  Unix.set_close_on_exec out_write;\n+  Unix.set_close_on_exec err_read;\n+  let inchan = Unix.in_channel_of_descr in_read in\n+  let outchan = Unix.out_channel_of_descr out_write in\n+  let errchan = Unix.in_channel_of_descr err_read in\n+  let shell = Lazy.force Ocamlbuild_pack.My_std.windows_shell in\n+  let test_cmd =\n+    String.concat \" \" (List.map Filename.quote (Array.to_list shell)) ^\n+    \"-ec \" ^\n+    Filename.quote (Ocamlbuild_pack.My_std.prep_windows_cmd cmd) in\n+  let argv,tmp_file =\n+    if String.length test_cmd < 7_900 then\n+      Array.append\n+        shell\n+        [| \"-ec\" ; Ocamlbuild_pack.My_std.prep_windows_cmd cmd |],None\n+    else\n+    let fln,ch = Filename.open_temp_file ~mode:[Open_binary] \"ocamlbuild\" \".sh\" in\n+    output_string ch (Ocamlbuild_pack.My_std.prep_windows_cmd cmd);\n+    close_out ch;\n+    let fln' = String.map (function '\\\\' -> '/' | c -> c) fln in\n+    Array.append\n+      shell\n+      [| \"-c\" ; fln' |], Some fln in\n+  let pid =\n+    Unix.create_process_env argv.(0) argv env out_read in_write err_write in\n+  Unix.close out_read;\n+  Unix.close in_write;\n+  Unix.close err_write;\n+  (pid, inchan, outchan, errchan,tmp_file)\n+\n+let close_process_full_win (pid,inchan, outchan, errchan, tmp_file) =\n+  let delete tmp_file =\n+    match tmp_file with\n+    | None -> ()\n+    | Some x -> try Sys.remove x with Sys_error _ -> () in\n+  let tmp_file_deleted = ref false in\n+  try\n+    close_in inchan;\n+    close_out outchan;\n+    close_in errchan;\n+    let res = snd(Unix.waitpid [] pid) in\n+    tmp_file_deleted := true;\n+    delete tmp_file;\n+    res\n+  with\n+  | x when tmp_file <> None && !tmp_file_deleted = false ->\n+    delete tmp_file;\n+    raise x\n+\n (* ***)\n (*** execute *)\n (* XXX: Add test for non reentrancy *)\n@@ -130,10 +187,16 @@\n   (*** add_job *)\n   let add_job cmd rest result id =\n     (*display begin fun oc -> fp oc \"Job %a is %s\\n%!\" print_job_id id cmd; end;*)\n-    let (stdout', stdin', stderr') = open_process_full cmd env in\n+    let (pid,stdout', stdin', stderr', tmp_file) =\n+      if Sys.win32 then open_process_full_win cmd env else\n+      let a,b,c = open_process_full cmd env in\n+      -1,a,b,c,None\n+    in\n     incr jobs_active;\n-    set_nonblock (doi stdout');\n-    set_nonblock (doi stderr');\n+    if not Sys.win32 then (\n+      set_nonblock (doi stdout');\n+      set_nonblock (doi stderr');\n+    );\n     let job =\n       { job_id          = id;\n         job_command     = cmd;\n@@ -143,7 +206,9 @@\n         job_stdin       = stdin';\n         job_stderr      = stderr';\n         job_buffer      = Buffer.create 1024;\n-        job_dying       = false }\n+        job_dying       = false;\n+        job_tmp_file    = tmp_file;\n+        job_pid         = pid }\n     in\n     outputs := FDM.add (doi stdout') job (FDM.add (doi stderr') job !outputs);\n     jobs := JS.add job !jobs;\n@@ -199,6 +264,7 @@\n               try\n                 read fd u 0 (Bytes.length u)\n               with\n+              | Unix.Unix_error(Unix.EPIPE,_,_) when Sys.win32 -> 0\n               | Unix.Unix_error(e,_,_)  ->\n                 let msg = error_message e in\n                 display (fun oc -> fp oc\n@@ -241,14 +307,19 @@\n       decr jobs_active;\n \n       (* PR#5371: we would get EAGAIN below otherwise *)\n-      clear_nonblock (doi job.job_stdout);\n-      clear_nonblock (doi job.job_stderr);\n-\n+      if not Sys.win32 then (\n+        clear_nonblock (doi job.job_stdout);\n+        clear_nonblock (doi job.job_stderr);\n+      );\n       do_read ~loop:true (doi job.job_stdout) job;\n       do_read ~loop:true (doi job.job_stderr) job;\n       outputs := FDM.remove (doi job.job_stdout) (FDM.remove (doi job.job_stderr) !outputs);\n       jobs := JS.remove job !jobs;\n-      let status = close_process_full (job.job_stdout, job.job_stdin, job.job_stderr) in\n+      let status =\n+        if Sys.win32 then\n+          close_process_full_win (job.job_pid, job.job_stdout, job.job_stdin, job.job_stderr, job.job_tmp_file)\n+        else\n+          close_process_full (job.job_stdout, job.job_stdin, job.job_stderr) in\n \n       let shown = ref false in\n \n--- ./src/ocamlbuild_unix_plugin.ml\n+++ ./src/ocamlbuild_unix_plugin.ml\n@@ -48,12 +48,22 @@\n   end\n \n let run_and_open s kont =\n+  let s_orig = s in\n+  let s =\n+    (* Be consistent! My_unix.run_and_open uses My_std.sys_command and\n+       sys_command uses bash. *)\n+    if Sys.win32 = false then s else\n+    let l = match Lazy.force My_std.windows_shell |> Array.to_list with\n+    | hd::tl -> (Filename.quote hd)::tl\n+    | _ -> assert false in\n+    \"\\\"\" ^ (String.concat \" \" l) ^ \" -ec \" ^ Filename.quote (\" \" ^ s) ^ \"\\\"\"\n+  in\n   let ic = Unix.open_process_in s in\n   let close () =\n     match Unix.close_process_in ic with\n     | Unix.WEXITED 0 -> ()\n     | Unix.WEXITED _ | Unix.WSIGNALED _ | Unix.WSTOPPED _ ->\n-        failwith (Printf.sprintf \"Error while running: %s\" s) in\n+        failwith (Printf.sprintf \"Error while running: %s\" s_orig) in\n   let res = try\n       kont ic\n     with e -> (close (); raise e)\n--- ./src/options.ml\n+++ ./src/options.ml\n@@ -174,11 +174,24 @@\n     build_dir := Filename.concat (Sys.getcwd ()) s\n   else\n     build_dir := s\n+\n+let slashify =\n+  if Sys.win32 then fun p -> String.map (function '\\\\' -> '/' | x -> x) p\n+  else fun p ->p\n+\n+let sb () =\n+  match Sys.os_type with\n+  | \"Win32\" ->\n+    (try set_binary_mode_out stdout true with _ -> ());\n+  | _ -> ()\n+\n+\n let spec = ref (\n     let print_version () =\n+      sb ();\n       Printf.printf \"ocamlbuild %s\\n%!\" Ocamlbuild_config.version; raise Exit_OK\n     in\n-    let print_vnum () = print_endline Ocamlbuild_config.version; raise Exit_OK in\n+    let print_vnum () = sb (); print_endline Ocamlbuild_config.version; raise Exit_OK in\n   Arg.align\n   [\n    \"-version\", Unit print_version , \" Display the version\";\n@@ -257,8 +270,8 @@\n    \"-build-dir\", String set_build_dir, \"<path> Set build directory (implies no-links)\";\n    \"-install-lib-dir\", Set_string Ocamlbuild_where.libdir, \"<path> Set the install library directory\";\n    \"-install-bin-dir\", Set_string Ocamlbuild_where.bindir, \"<path> Set the install binary directory\";\n-   \"-where\", Unit (fun () -> print_endline !Ocamlbuild_where.libdir; raise Exit_OK), \" Display the install library directory\";\n-   \"-which\", String (fun cmd -> print_endline (find_tool cmd); raise Exit_OK), \"<command> Display path to the tool command\";\n+   \"-where\", Unit (fun () -> sb (); print_endline (slashify !Ocamlbuild_where.libdir); raise Exit_OK), \" Display the install library directory\";\n+   \"-which\", String (fun cmd -> sb (); print_endline (slashify (find_tool cmd)); raise Exit_OK), \"<command> Display path to the tool command\";\n    \"-ocamlc\", set_cmd ocamlc, \"<command> Set the OCaml bytecode compiler\";\n    \"-plugin-ocamlc\", set_cmd plugin_ocamlc, \"<command> Set the OCaml bytecode compiler \\\n      used when building myocamlbuild.ml (only)\";\n--- ./src/pathname.ml\n+++ ./src/pathname.ml\n@@ -84,6 +84,26 @@\n   | x :: xs -> x :: normalize_list xs\n \n let normalize x =\n+  let x =\n+    if Sys.win32 = false then\n+      x\n+    else\n+      let len = String.length x in\n+      let b = Bytes.create len in\n+      for i = 0 to pred len do\n+        match x.[i] with\n+        | '\\\\' -> Bytes.set b i '/'\n+        | c -> Bytes.set b i c\n+      done;\n+      if len > 1 then (\n+        let c1 = Bytes.get b 0 in\n+        let c2 = Bytes.get b 1 in\n+        if c2 = ':' && c1 >= 'a' && c1 <= 'z' &&\n+           ( len = 2 || Bytes.get b 2 = '/') then\n+          Bytes.set b 0 (Char.uppercase_ascii c1)\n+      );\n+      Bytes.unsafe_to_string b\n+  in\n   if Glob.eval not_normal_form_re x then\n     let root, paths = split x in\n     join root (normalize_list paths)\n--- ./src/shell.ml\n+++ ./src/shell.ml\n@@ -24,12 +24,26 @@\n     | 'a'..'z' | 'A'..'Z' | '0'..'9' | '.' | '-' | '/' | '_' | ':' | '@' | '+' | ',' -> loop (pos + 1)\n     | _ -> false in\n   loop 0\n+\n+let generic_quote quotequote s =\n+  let l = String.length s in\n+  let b = Buffer.create (l + 20) in\n+  Buffer.add_char b '\\'';\n+  for i = 0 to l - 1 do\n+    if s.[i] = '\\''\n+    then Buffer.add_string b quotequote\n+    else Buffer.add_char b  s.[i]\n+  done;\n+  Buffer.add_char b '\\'';\n+  Buffer.contents b\n+let unix_quote = generic_quote \"'\\\\''\"\n+\n let quote_filename_if_needed s =\n   if is_simple_filename s then s\n   (* We should probably be using [Filename.unix_quote] except that function\n    * isn't exported. Users on Windows will have to live with not being able to\n    * install OCaml into c:\\o'caml. Too bad. *)\n-  else if Sys.os_type = \"Win32\" then Printf.sprintf \"'%s'\" s\n+  else if Sys.os_type = \"Win32\" then unix_quote s\n   else Filename.quote s\n let chdir dir =\n   reset_filesys_cache ();\n@@ -37,7 +51,7 @@\n let run args target =\n   reset_readdir_cache ();\n   let cmd = String.concat \" \" (List.map quote_filename_if_needed args) in\n-  if !*My_unix.is_degraded || Sys.os_type = \"Win32\" then\n+  if !*My_unix.is_degraded then\n     begin\n       Log.event cmd target Tags.empty;\n       let st = sys_command cmd in\n"
          }
        ],
        "opam": {
          "name": "ocamlbuild",
          "version": "0.12.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocamlbuild\"\nversion: \"0.12.0\"\nsynopsis:\n  \"OCamlbuild is a build system with builtin rules to easily build most OCaml projects.\"\nmaintainer: \"Gabriel Scherer <gabriel.scherer@gmail.com>\"\nauthors: [\"Nicolas Pouillard\" \"Berke Durak\"]\nlicense: \"LGPL-2 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/ocamlbuild/\"\ndoc: \"https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc\"\nbug-reports: \"https://github.com/ocaml/ocamlbuild/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03\" & < \"4.08.0\"}\n]\nconflicts: [\n  \"base-ocamlbuild\"\n  \"ocamlfind\" {< \"1.6.2\"}\n]\nbuild: [\n  [\n    make\n    \"-f\"\n    \"configure.make\"\n    \"all\"\n    \"OCAMLBUILD_PREFIX=%{prefix}%\"\n    \"OCAMLBUILD_BINDIR=%{bin}%\"\n    \"OCAMLBUILD_LIBDIR=%{lib}%\"\n    \"OCAMLBUILD_MANDIR=%{man}%\"\n    \"OCAML_NATIVE=%{ocaml:native}%\"\n    \"OCAML_NATIVE_TOOLS=%{ocaml:native}%\"\n  ]\n  [make \"check-if-preinstalled\" \"all\" \"opam-install\"]\n]\ndev-repo: \"git+https://github.com/ocaml/ocamlbuild.git\"\nurl {\n  src: \"https://github.com/ocaml/ocamlbuild/archive/0.12.0.tar.gz\"\n  checksum: \"md5=442baa19470bd49150f153122e22907b\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < ocamlbuild-0.12.0.patch' : 'true'}"
              ],
              [
                "make", "-f", "configure.make", "all",
                "OCAMLBUILD_PREFIX=#{self.install}",
                "OCAMLBUILD_BINDIR=#{self.bin}",
                "OCAMLBUILD_LIBDIR=#{self.lib}",
                "OCAMLBUILD_MANDIR=#{self.man}", "OCAMLBUILD_NATIVE=true",
                "OCAMLBUILD_NATIVE_TOOLS=true"
              ],
              [
                "make", "check-if-preinstalled", "all",
                "#{os == 'windows' ? 'install' : 'opam-install'}"
              ]
            ]
          }
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1", "ocaml@4.7.1000" ]
    },
    "@opam/ocaml-migrate-parsetree@opam:1.1.0": {
      "record": {
        "name": "@opam/ocaml-migrate-parsetree",
        "version": "opam:1.1.0",
        "source":
          "archive:https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.1.0/ocaml-migrate-parsetree-1.1.0.tbz#md5:7dd4808e27af98065f63604c9658d311",
        "files": [],
        "opam": {
          "name": "ocaml-migrate-parsetree",
          "version": "1.1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocaml-migrate-parsetree\"\nversion: \"1.1.0\"\nsynopsis: \"\"\ndescription: \"\"\"\nConvert OCaml parsetrees between different versions \n\nThis library converts parsetrees, outcometree and ast mappers between different OCaml versions.\nHigh-level functions help making PPX rewriters independent of a compiler version.\"\"\"\nmaintainer: \"frederic.bour@lakaban.net\"\nauthors: [\n  \"Fr辿d辿ric Bour <frederic.bour@lakaban.net>\"\n  \"J辿r辿mie Dimino <jeremie@dimino.org>\"\n]\nlicense: \"LGPL-2.1\"\ntags: [\"syntax\" \"org:ocamllabs\"]\nhomepage: \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree\"\ndoc: \"https://ocaml-ppx.github.io/ocaml-migrate-parsetree/\"\nbug-reports: \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree/issues\"\ndepends: [\n  \"result\"\n  \"dune\" {build}\n  \"ocaml\" {>= \"4.02.0\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/ocaml-ppx/ocaml-migrate-parsetree.git\"\nurl {\n  src:\n    \"https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.1.0/ocaml-migrate-parsetree-1.1.0.tbz\"\n  checksum: \"md5=7dd4808e27af98065f63604c9658d311\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.5.0",
        "@opam/result@opam:1.3", "ocaml@4.7.1000"
      ]
    },
    "@opam/ocaml-compiler-libs@opam:v0.11.0": {
      "record": {
        "name": "@opam/ocaml-compiler-libs",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/ocaml-compiler-libs-v0.11.0.tar.gz#md5:e170c16186aa55b7e8b11e461418a10a",
        "files": [],
        "opam": {
          "name": "ocaml-compiler-libs",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ocaml-compiler-libs\"\nversion: \"v0.11.0\"\nsynopsis: \"OCaml compiler libraries repackaged\"\ndescription: \"\"\"\nThis packages exposes the OCaml compiler libraries repackages under\nthe toplevel names Ocaml_common, Ocaml_bytecomp, ...\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/ocaml-compiler-libs\"\nbug-reports: \"https://github.com/janestreet/ocaml-compiler-libs/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"jbuilder\" {build & >= \"1.0+beta12\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/ocaml-compiler-libs.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/ocaml-compiler-libs-v0.11.0.tar.gz\"\n  checksum: \"md5=e170c16186aa55b7e8b11e461418a10a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/num@opam:1.1": {
      "record": {
        "name": "@opam/num",
        "version": "opam:1.1",
        "source":
          "archive:https://github.com/ocaml/num/archive/v1.1.tar.gz#md5:710cbe18b144955687a03ebab439ff2b",
        "files": [
          {
            "name": "findlib-install.patch",
            "content":
              "From 7688bb4fea24463c92e9c4870acc08495a4c77cb Mon Sep 17 00:00:00 2001\nFrom: David Allsopp <david.allsopp@metastack.com>\nDate: Wed, 10 Jan 2018 15:20:46 +0000\nSubject: [PATCH] Provide findlib-install target\n\nAllows installing the entire library using ocamlfind.\n---\n Makefile     | 10 +++++++++-\n src/META     | 17 -----------------\n src/META.in  | 19 +++++++++++++++++++\n src/Makefile | 17 +++++++++++++++--\n 4 files changed, 43 insertions(+), 20 deletions(-)\n delete mode 100644 src/META\n create mode 100644 src/META.in\n\ndiff --git a/Makefile b/Makefile\nindex 6a5d08f..b40e588 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -14,8 +14,16 @@ install:\n \t$(MAKE) -C src install\n \t$(MAKE) -C toplevel install\n \n+findlib-install:\n+\t$(MAKE) -C src findlib-install\n+\t$(MAKE) -C toplevel install\n+\n uninstall:\n \t$(MAKE) -C src uninstall\n \t$(MAKE) -C toplevel uninstall\n \n-.PHONY: all test clean install uninstall\n+findlib-uninstall:\n+\t$(MAKE) -C src findlib-uninstall\n+\t$(MAKE) -C toplevel uninstall\n+\n+.PHONY: all test clean install uninstall findlib-install findlib-uninstall\ndiff --git a/src/META b/src/META\ndeleted file mode 100644\nindex 66ac170..0000000\n--- a/src/META\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-# This META is the one provided by findlib when the \"num\" library was\n-# part of the core OCaml distribution.  For backward compatibility,\n-# it installs into OCaml's standard library directory, not in a subdirectory\n-\n-requires = \"num.core\"\n-requires(toploop) = \"num.core,num-top\"\n-version = \"1.0\"\n-description = \"Arbitrary-precision rational arithmetic\"\n-package \"core\" (\n-  directory = \"^\"\n-  version = \"1.0\"\n-  browse_interfaces = \"\"\n-  archive(byte) = \"nums.cma\"\n-  archive(native) = \"nums.cmxa\"\n-  plugin(byte) = \"nums.cma\"\n-  plugin(native) = \"nums.cmxs\"\n-)\ndiff --git a/src/META.in b/src/META.in\nnew file mode 100644\nindex 0000000..b5678b7\n--- /dev/null\n+++ b/src/META.in\n@@ -0,0 +1,19 @@\n+# This META is the one provided by findlib when the \"num\" library was\n+# part of the core OCaml distribution.  For backward compatibility,\n+# it is installed into OCaml's standard library directory. If the\n+# directory line below is removed, then it's installed in a\n+# subdirectory, as normal for a findlib package.\n+\n+requires = \"num.core\"\n+requires(toploop) = \"num.core,num-top\"\n+version = \"1.0\"\n+description = \"Arbitrary-precision rational arithmetic\"\n+package \"core\" (\n+  directory = \"^\"\n+  version = \"1.0\"\n+  browse_interfaces = \"\"\n+  archive(byte) = \"nums.cma\"\n+  archive(native) = \"nums.cmxa\"\n+  plugin(byte) = \"nums.cma\"\n+  plugin(native) = \"nums.cmxs\"\n+)\ndiff --git a/src/Makefile b/src/Makefile\nindex 97dc074..ff271fe 100644\n--- a/src/Makefile\n+++ b/src/Makefile\n@@ -80,21 +80,34 @@ endif\n ifeq \"$(NATDYNLINK)\" \"true\"\n TOINSTALL+=nums.cmxs\n endif\n+ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n TOINSTALL_STUBS=dllnums.$(SO)\n+else\n+TOINSTALL_STUBS=\n+endif\n \n install:\n+\tcp META.in META\n \t$(OCAMLFIND) install num META\n+\trm -f META\n \t$(INSTALL_DATA) $(TOINSTALL) $(STDLIBDIR)\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n \t$(INSTALL_DLL) $(TOINSTALL_STUBS) $(STDLIBDIR)/stublibs\n endif\n \n-uninstall:\n+findlib-install:\n+\tgrep -Fv '^' META.in > META\n+\t$(OCAMLFIND) install num META $(TOINSTALL) $(TOINSTALL_STUBS)\n+\trm -f META\n+\n+findlib-uninstall:\n+\t$(OCAMLFIND) remove num\n+\n+uninstall: findlib-uninstall\n \tcd $(STDLIBDIR) && rm -f $(TOINSTALL)\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n \tcd $(STDLIBDIR)/stublibs && rm -f $(TOINSTALL_STUBS) \n endif\n-\t$(OCAMLFIND) remove num\n \n clean:\n \trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *.$(SO)\n-- \n2.14.1\n\n"
          },
          {
            "name": "installation-warning.patch",
            "content":
              "From db8d748b2cad0adc2698e9fcf28727083a711bae Mon Sep 17 00:00:00 2001\nFrom: David Allsopp <david.allsopp@metastack.com>\nDate: Wed, 24 Jan 2018 16:01:56 +0000\nSubject: [PATCH] Warn about installations broken by previous faulty package\n\n---\n Makefile | 33 +++++++++++++++++++++++++++++++++\n 1 file changed, 33 insertions(+)\n\ndiff --git a/Makefile b/Makefile\nindex b40e588..d4dcd70 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -14,9 +14,42 @@ install:\n \t$(MAKE) -C src install\n \t$(MAKE) -C toplevel install\n \n+OCAMLFIND_DIR:=$(dir $(shell command -v ocamlfind 2>/dev/null))\n+OCAMLC_DIR:=$(dir $(shell command -v ocamlc 2>/dev/null))\n+NUM_INSTALLED:=$(shell ocamlfind query num 2>/dev/null)\n+\n+ifeq ($(NUM_INSTALLED),)\n+# The num findlib package is not already present - wohoo!\n+OUR_FAULT=no\n+else\n+ifeq ($(OCAMLFIND_DIR),$(OCAMLC_DIR))\n+# The num findlib package is present, but ocamlc and ocamlfind are in the\n+# same place, which means that either we're looking at a system-installed\n+# ocamlfind (which isn't supported), or the user has done something else\n+# nefarious and doesn't deserve our sympathy (or, at least, our potentially\n+# unhelpful advice)\n+OUR_FAULT=no\n+else\n+# The num findlib package package is present, and ocamlc and ocamlfind reside\n+# in different directories, which means that we're almost certainly looking at\n+# a system switch which has been damaged by a previous num package installation\n+# on an OS which didn't protect the system lib directory.\n+OUR_FAULT=probably\n+endif\n+endif\n+\n findlib-install:\n+ifeq ($(OUR_FAULT),no)\n \t$(MAKE) -C src findlib-install\n \t$(MAKE) -C toplevel install\n+else\n+\t@echo \"\\033[0;31m[ERROR]\\033[m It appears that the num library was previously installed to your system\"\n+\t@echo \"        compiler's lib directory, probably by a faulty opam package.\"\n+\t@echo \"        You will need to remove arith_flags.*, arith_status.*, big_int.*,\"\n+\t@echo \"        int_misc.*, nat.*, num.*, ratio.*, nums.*, libnums.* and\"\n+\t@echo \"        stublibs/dllnums.* from $(shell ocamlc -where).\"\n+\t@false\n+endif\n \n uninstall:\n \t$(MAKE) -C src uninstall\n-- \n2.14.1\n\n"
          },
          {
            "name": "num-1.1.patch",
            "content":
              "--- ./src/Makefile\n+++ ./src/Makefile\n@@ -80,7 +80,7 @@\n ifeq \"$(NATDYNLINK)\" \"true\"\n TOINSTALL+=nums.cmxs\n endif\n ifeq \"$(SUPPORTS_SHARED_LIBRARIES)\" \"true\"\n-TOINSTALL_STUBS=dllnums.$(SO)\n+TOINSTALL_STUBS=dllnums$(EXT_DLL)\n else\n TOINSTALL_STUBS=\n@@ -112,7 +112,7 @@\n endif\n \n clean:\n-\trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *.$(SO)\n+\trm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *$(EXE_DLL)\n \n depend:\n \t$(OCAMLDEP) -slash *.mli *.ml > .depend\n"
          }
        ],
        "opam": {
          "name": "num",
          "version": "1.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"num\"\nversion: \"1.1\"\nsynopsis:\n  \"The legacy Num library for arbitrary-precision integer and rational arithmetic\"\nmaintainer: \"Xavier Leroy <xavier.leroy@inria.fr>\"\nauthors: [\"Val辿rie M辿nissier-Morain\" \"Pierre Weis\" \"Xavier Leroy\"]\nlicense: \"LGPL 2.1 with OCaml linking exception\"\nhomepage: \"https://github.com/ocaml/num/\"\nbug-reports: \"https://github.com/ocaml/num/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.06.0\"}\n  \"ocamlfind\" {build & >= \"1.7.3\"}\n]\nconflicts: [\"base-num\"]\nbuild: make\ninstall: [\n  make\n  \"install\" {!ocaml:preinstalled}\n  \"findlib-install\" {ocaml:preinstalled}\n]\nremove: [\n  make\n  \"uninstall\" {!ocaml:preinstalled}\n  \"findlib-uninstall\" {ocaml:preinstalled}\n]\npatches: [\"findlib-install.patch\" \"installation-warning.patch\"]\ndev-repo: \"git+https://github.com/ocaml/num.git\"\nextra-files: [\n  [\"installation-warning.patch\" \"md5=93c92bf6da6bae09d068da42b1bbaaac\"]\n  [\"findlib-install.patch\" \"md5=3163a4c3f8dd084653eeb64d95311a2a\"]\n]\nurl {\n  src: \"https://github.com/ocaml/num/archive/v1.1.tar.gz\"\n  checksum: \"md5=710cbe18b144955687a03ebab439ff2b\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < num-1.1.patch' : 'true'}"
              ],
              [ "make" ]
            ],
            "install": [ [ "make", "findlib-install" ] ],
            "exportedEnv": {
              "CAML_LD_LIBRARY_PATH": {
                "val":
                  "#{self.install / 'lib' / 'num' : $CAML_LD_LIBRARY_PATH}",
                "scope": "global",
                "exclusive": false
              }
            }
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/merlin-extend@opam:0.3": {
      "record": {
        "name": "@opam/merlin-extend",
        "version": "opam:0.3",
        "source":
          "archive:https://github.com/let-def/merlin-extend/archive/v0.3.tar.gz#md5:9c6dfd4f53328f02f12fcc265f4e2dda",
        "files": [
          {
            "name": "merlin-extend-winfix.patch",
            "content":
              "--- ./extend_helper.ml\n+++ ./extend_helper.ml\n@@ -1,13 +1,6 @@\n-(*pp cppo -V OCAML:`ocamlc -version` *)\n open Parsetree\n open Extend_protocol\n \n-#if OCAML_VERSION < (4, 3, 0)\n-# define CONST_STRING Asttypes.Const_string\n-#else\n-# define CONST_STRING Parsetree.Pconst_string\n-#endif\n-\n (** Default implementation for [Reader_def.print_outcome] using\n     [Oprint] from compiler-libs *)\n let print_outcome_using_oprint ppf = function\n@@ -28,7 +21,7 @@\n       pstr_loc = Location.none;\n       pstr_desc = Pstr_eval ({\n           pexp_loc = Location.none;\n-          pexp_desc = Pexp_constant (CONST_STRING (msg, None));\n+          pexp_desc = Pexp_constant (Parsetree.Pconst_string (msg, None));\n           pexp_attributes = [];\n         }, []);\n     }]\n@@ -112,7 +105,7 @@\n   let msg = match payload with\n     | PStr [{\n         pstr_desc = Pstr_eval ({\n-            pexp_desc = Pexp_constant (CONST_STRING (msg, _));\n+            pexp_desc = Pexp_constant (Parsetree.Pconst_string (msg, _));\n           }, _);\n       }] -> msg\n     | _ -> \"Warning: extension produced an incorrect syntax-error node\"\n"
          }
        ],
        "opam": {
          "name": "merlin-extend",
          "version": "0.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"merlin-extend\"\nversion: \"0.3\"\nsynopsis: \"A protocol to provide custom frontend to Merlin\"\ndescription: \"\"\"\nThis protocol allows to replace the OCaml frontend of Merlin.\nIt extends what used to be done with the `-pp' flag to handle a few more cases.\"\"\"\nmaintainer: \"Frederic Bour <frederic.bour@lakaban.net>\"\nauthors: \"Frederic Bour <frederic.bour@lakaban.net>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/let-def/merlin-extend\"\nbug-reports: \"https://github.com/let-def/merlin-extend\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"ocamlfind\" {build}\n  \"cppo\" {build}\n]\nflags: light-uninstall\nbuild: make\ninstall: [make \"install\"]\nremove: [\"ocamlfind\" \"remove\" \"merlin_extend\"]\ndev-repo: \"git+https://github.com/let-def/merlin-extend.git\"\nurl {\n  src: \"https://github.com/let-def/merlin-extend/archive/v0.3.tar.gz\"\n  checksum: \"md5=9c6dfd4f53328f02f12fcc265f4e2dda\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < merlin-extend-winfix.patch' : 'true'}"
              ],
              [ "make" ]
            ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/merlin@opam:3.2.2": {
      "record": {
        "name": "@opam/merlin",
        "version": "opam:3.2.2",
        "source":
          "archive:https://github.com/ocaml/merlin/releases/download/v3.2.2/merlin-v3.2.2.tbz#md5:ede35b65f8ac9c440cfade5445662c54",
        "files": [],
        "opam": {
          "name": "merlin",
          "version": "3.2.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"merlin\"\nversion: \"3.2.2\"\nsynopsis: \"Installation with Opam\"\ndescription: \"\"\"\nIf you have a working [Opam](https://opam.ocaml.org/) installation, Merlin is only two commands away:\n\n```shell\nopam install merlin\nopam user-setup install\n```\n\n[opam-user-setup](https://github.com/OCamlPro/opam-user-setup) takes care of configuring Emacs and Vim to make best use of your current install.\n\nYou can also [configure the editor](#editor-setup) yourself, if you prefer.\"\"\"\nmaintainer: \"defree@gmail.com\"\nauthors: \"The Merlin team\"\nhomepage: \"https://github.com/ocaml/merlin\"\nbug-reports: \"https://github.com/ocaml/merlin/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.1\" & < \"4.08\"}\n  \"dune\" {build}\n  \"ocamlfind\" {>= \"1.5.2\"}\n  \"yojson\"\n  \"craml\" {with-test}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\npost-messages:\n  \"\"\"\nmerlin installed.\n\nQuick setup for VIM\n-------------------\nAppend this to your .vimrc to add merlin to vim's runtime-path:\n  let g:opamshare = substitute(system('opam config var share'),'\\\\n$','','''')\n  execute \"set rtp+=\" . g:opamshare . \"/merlin/vim\"\n\nAlso run the following line in vim to index the documentation:\n  :execute \"helptags \" . g:opamshare . \"/merlin/vim/doc\"\n\nQuick setup for EMACS\n-------------------\nAdd opam emacs directory to your load-path by appending this to your .emacs:\n  (let ((opam-share (ignore-errors (car (process-lines \"opam\" \"config\" \"var\" \"share\")))))\n   (when (and opam-share (file-directory-p opam-share))\n    ;; Register Merlin\n    (add-to-list 'load-path (expand-file-name \"emacs/site-lisp\" opam-share))\n    (autoload 'merlin-mode \"merlin\" nil t nil)\n    ;; Automatically start it in OCaml buffers\n    (add-hook 'tuareg-mode-hook 'merlin-mode t)\n    (add-hook 'caml-mode-hook 'merlin-mode t)\n    ;; Use opam switch to lookup ocamlmerlin binary\n    (setq merlin-command 'opam)))\n\nTake a look at https://github.com/ocaml/merlin for more information\n\nQuick setup with opam-user-setup\n--------------------------------\n\nOpam-user-setup support Merlin.\n\n  $ opam user-setup install\n\nshould take care of basic setup.\nSee https://github.com/OCamlPro/opam-user-setup\"\"\"\n    {success & !user-setup:installed}\ndev-repo: \"git+https://github.com/ocaml/merlin.git\"\nurl {\n  src:\n    \"https://github.com/ocaml/merlin/releases/download/v3.2.2/merlin-v3.2.2.tbz\"\n  checksum: \"md5=ede35b65f8ac9c440cfade5445662c54\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.5.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/yojson@opam:1.4.1",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/menhir@opam:20181026": {
      "record": {
        "name": "@opam/menhir",
        "version": "opam:20181026",
        "source":
          "archive:https://gitlab.inria.fr/fpottier/menhir/repository/20181026/archive.tar.gz#md5:7047bcffbdc50cffd70012f4da2210ec",
        "files": [],
        "opam": {
          "name": "menhir",
          "version": "20181026",
          "opam":
            "opam-version: \"2.0\"\nname: \"menhir\"\nversion: \"20181026\"\nsynopsis: \"An LR(1) parser generator\"\nmaintainer: \"francois.pottier@inria.fr\"\nauthors: [\n  \"Fran巽ois Pottier <francois.pottier@inria.fr>\"\n  \"Yann R辿gis-Gianas <yrg@pps.univ-paris-diderot.fr>\"\n]\nhomepage: \"http://gitlab.inria.fr/fpottier/menhir\"\nbug-reports: \"menhir@inria.fr\"\ndepends: [\n  \"ocaml\" {>= \"4.02\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n]\nbuild: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"PREFIX=%{prefix}%\"\n  \"USE_OCAMLFIND=true\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\ninstall: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"install\"\n  \"PREFIX=%{prefix}%\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\nremove: [\n  make\n  \"-f\"\n  \"Makefile\"\n  \"uninstall\"\n  \"PREFIX=%{prefix}%\"\n  \"docdir=%{doc}%/menhir\"\n  \"libdir=%{lib}%/menhir\"\n  \"mandir=%{man}%/man1\"\n]\ndev-repo: \"git+https://gitlab.inria.fr/fpottier/menhir.git\"\nurl {\n  src:\n    \"https://gitlab.inria.fr/fpottier/menhir/repository/20181026/archive.tar.gz\"\n  checksum: [\n    \"md5=7047bcffbdc50cffd70012f4da2210ec\"\n    \"sha512=1101a0e0a33625e11700a7a909334fdf4d2600acf8aa629b4de1982185a4aa8320b3eaa87db75b4c76dd4663f6e5b77740f70b92c6a109ba3496db6eeae4479b\"\n  ]\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/magic-mime@opam:1.1.0": {
      "record": {
        "name": "@opam/magic-mime",
        "version": "opam:1.1.0",
        "source":
          "archive:https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.0/magic-mime-1.1.0.tbz#md5:341ab5133c2e17ca645f23a0149025d1",
        "files": [],
        "opam": {
          "name": "magic-mime",
          "version": "1.1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"magic-mime\"\nversion: \"1.1.0\"\nsynopsis: \"Map filenames to common MIME types\"\ndescription: \"\"\"\nThis library contains a database of MIME types that maps filename extensions\ninto MIME types suitable for use in many Internet protocols such as HTTP or\ne-mail.  It is generated from the `mime.types` file found in Unix systems, but\nhas no dependency on a filesystem since it includes the contents of the\ndatabase as an ML datastructure.\n\nFor example, here's how to lookup MIME types in the [utop] REPL:\n\n    #require \"magic-mime\";;\n    Magic_mime.lookup \"/foo/bar.txt\";;\n    - : bytes = \"text/plain\"\n    Magic_mime.lookup \"bar.css\";;\n    - : bytes = \"text/css\"\n\n### Internals\n\nThe following files need to be edited to add MIME types:\n\n- mime.types: this is obtained by synching from the Apache Foundation's\n  [mime.types](https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)\n  in the Apache Subversion repository.\n- x-mime.types: these are the extension types, so non-standard `x-` prefixes are used here.\n- file.types: full filenames of common occurrences that are useful to map onto a MIME type.\n  OCaml-specific things like `opam` files show up here.\"\"\"\nmaintainer: \"Anil Madhavapeddy <anil@recoil.org>\"\nauthors: [\"Anil Madhavapeddy\" \"Maxence Guesdon\"]\nlicense: \"ISC\"\nhomepage: \"https://github.com/mirage/ocaml-magic-mime\"\ndoc: \"https://mirage.github.io/ocaml-magic-mime\"\nbug-reports: \"https://github.com/mirage/ocaml-magic-mime/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta9\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-magic-mime.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.0/magic-mime-1.1.0.tbz\"\n  checksum: \"md5=341ab5133c2e17ca645f23a0149025d1\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/lwt_ppx@opam:1.2.1": {
      "record": {
        "name": "@opam/lwt_ppx",
        "version": "opam:1.2.1",
        "source":
          "archive:https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz#md5:e919bee206f18b3d49250ecf9584fde7",
        "files": [],
        "opam": {
          "name": "lwt_ppx",
          "version": "1.2.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"lwt_ppx\"\nversion: \"1.2.1\"\nsynopsis:\n  \"PPX syntax for Lwt, providing something similar to async/await from JavaScript\"\nmaintainer: \"Anton Bachin <antonbachin@yahoo.com>\"\nauthors: \"Gabriel Radanne\"\nlicense: \"LGPL with OpenSSL linking exception\"\nhomepage: \"https://github.com/ocsigen/lwt\"\ndoc: \"https://ocsigen.org/lwt/api/Ppx_lwt\"\nbug-reports: \"https://github.com/ocsigen/lwt/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta14\"}\n  \"lwt\"\n  \"ocaml-migrate-parsetree\"\n  \"ppx_tools_versioned\" {>= \"5.0.1\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/ocsigen/lwt.git\"\nurl {\n  src: \"https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz\"\n  checksum: \"md5=e919bee206f18b3d49250ecf9584fde7\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/lwt@opam:4.1.0", "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ppx_tools_versioned@opam:5.2.1", "ocaml@4.7.1000"
      ]
    },
    "@opam/lwt@opam:4.1.0": {
      "record": {
        "name": "@opam/lwt",
        "version": "opam:4.1.0",
        "source":
          "archive:https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz#md5:e919bee206f18b3d49250ecf9584fde7",
        "files": [],
        "opam": {
          "name": "lwt",
          "version": "4.1.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"lwt\"\nversion: \"4.1.0\"\nsynopsis: \"Promises, concurrency, and parallelized I/O\"\ndescription: \"\"\"\nA promise is a value that may become determined in the future.\n\nLwt provides typed, composable promises. Promises that are resolved by I/O are\nresolved by Lwt in parallel.\n\nMeanwhile, OCaml code, including code creating and waiting on promises, runs in\na single thread by default. This reduces the need for locks or other\nsynchronization primitives. Code can be run in parallel on an opt-in basis.\"\"\"\nmaintainer: [\n  \"Anton Bachin <antonbachin@yahoo.com>\"\n  \"Mauricio Fernandez <mfp@acm.org>\"\n  \"Simon Cruanes <simon.cruanes.2007@m4x.org>\"\n]\nauthors: [\"J辿r担me Vouillon\" \"J辿r辿mie Dimino\"]\nlicense: \"LGPL with OpenSSL linking exception\"\nhomepage: \"https://github.com/ocsigen/lwt\"\ndoc: \"https://ocsigen.org/lwt/manual/\"\nbug-reports: \"https://github.com/ocsigen/lwt/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"cppo\" {build & >= \"1.1.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta14\"}\n  \"ocamlfind\" {build & >= \"1.7.3-1\"}\n  \"result\"\n]\ndepopts: [\"base-threads\" \"base-unix\" \"conf-libev\"]\nconflicts: [\n  \"ocaml-variants\" {= \"4.02.1+BER\"}\n]\nbuild: [\n  [\"ocaml\" \"src/util/configure.ml\" \"-use-libev\" \"%{conf-libev:installed}%\"]\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n]\nmessages: [\n  \"For the PPX, please install package lwt_ppx\" {!lwt_ppx:installed}\n  \"For the Camlp4 syntax, please install package lwt_camlp4\"\n    {camlp4:installed & !lwt_camlp4:installed}\n  \"For Lwt_log and Lwt_daemon, please install package lwt_log\"\n    {!lwt_log:installed}\n]\ndev-repo: \"git+https://github.com/ocsigen/lwt.git\"\nurl {\n  src: \"https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz\"\n  checksum: \"md5=e919bee206f18b3d49250ecf9584fde7\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/jbuilder@opam:transition", "@opam/ocamlfind@opam:1.8.0",
        "@opam/result@opam:1.3", "ocaml@4.7.1000"
      ]
    },
    "@opam/logs@opam:0.6.2": {
      "record": {
        "name": "@opam/logs",
        "version": "opam:0.6.2",
        "source":
          "archive:http://erratique.ch/software/logs/releases/logs-0.6.2.tbz#md5:19f824c02c83c6dddc3bfb6459e4743e",
        "files": [],
        "opam": {
          "name": "logs",
          "version": "0.6.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"logs\"\nversion: \"0.6.2\"\nsynopsis: \"Logging infrastructure for OCaml\"\ndescription: \"\"\"\nLogs provides a logging infrastructure for OCaml. Logging is performed\non sources whose reporting level can be set independently. Log message\nreport is decoupled from logging and is handled by a reporter.\n\nA few optional log reporters are distributed with the base library and\nthe API easily allows to implement your own.\n\n`Logs` depends only on the `result` compatibility package. The\noptional `Logs_fmt` reporter on OCaml formatters depends on [Fmt][fmt].\nThe optional `Logs_browser` reporter that reports to the web browser\nconsole depends on [js_of_ocaml][jsoo]. The optional `Logs_cli` library\nthat provides command line support for controlling Logs depends on\n[`Cmdliner`][cmdliner]. The optional `Logs_lwt` library that provides Lwt logging\nfunctions depends on [`Lwt`][lwt]\n\nLogs and its reporters are distributed under the ISC license.\n\n[fmt]: http://erratique.ch/software/fmt\n[jsoo]: http://ocsigen.org/js_of_ocaml/\n[cmdliner]: http://erratique.ch/software/cmdliner\n[lwt]: http://ocsigen.org/lwt/\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"log\" \"system\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/logs\"\ndoc: \"http://erratique.ch/software/logs/doc\"\nbug-reports: \"https://github.com/dbuenzli/logs/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"result\"\n  \"mtime\" {with-test}\n]\ndepopts: [\"js_of_ocaml\" \"fmt\" \"cmdliner\" \"lwt\"]\nconflicts: [\n  \"cmdliner\" {< \"0.9.8\"}\n]\nbuild: [\n  \"ocaml\"\n  \"pkg/pkg.ml\"\n  \"build\"\n  \"--pinned\"\n  \"%{pinned}%\"\n  \"--with-js_of_ocaml\"\n  \"%{js_of_ocaml:installed}%\"\n  \"--with-fmt\"\n  \"%{fmt:installed}%\"\n  \"--with-cmdliner\"\n  \"%{cmdliner:installed}%\"\n  \"--with-lwt\"\n  \"%{lwt:installed}%\"\n]\ndev-repo: \"git+http://erratique.ch/repos/logs.git\"\nurl {\n  src: \"http://erratique.ch/software/logs/releases/logs-0.6.2.tbz\"\n  checksum: \"md5=19f824c02c83c6dddc3bfb6459e4743e\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "@opam/topkg@opam:1.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/jsonm@opam:1.0.1": {
      "record": {
        "name": "@opam/jsonm",
        "version": "opam:1.0.1",
        "source":
          "archive:http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz#md5:e2ca39eaefd55b8d155c4f1ec5885311",
        "files": [],
        "opam": {
          "name": "jsonm",
          "version": "1.0.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"jsonm\"\nversion: \"1.0.1\"\nsynopsis: \"Non-blocking streaming JSON codec for OCaml\"\ndescription: \"\"\"\nJsonm is a non-blocking streaming codec to decode and encode the JSON\ndata format. It can process JSON text without blocking on IO and\nwithout a complete in-memory representation of the data.\n\nThe alternative \"uncut\" codec also processes whitespace and\n(non-standard) JSON with JavaScript comments.\n\nJsonm is made of a single module and depends on [Uutf][uutf]. It is distributed\nunder the ISC license.\n\n[uutf]: http://erratique.ch/software/uutf\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"json\" \"codec\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/jsonm\"\ndoc: \"http://erratique.ch/software/jsonm/doc/Jsonm\"\nbug-reports: \"https://github.com/dbuenzli/jsonm/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"uchar\"\n  \"uutf\" {>= \"1.0.0\"}\n]\nbuild: [\"ocaml\" \"pkg/pkg.ml\" \"build\" \"--pinned\" \"%{pinned}%\"]\ndev-repo: \"git+http://erratique.ch/repos/jsonm.git\"\nurl {\n  src: \"http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz\"\n  checksum: \"md5=e2ca39eaefd55b8d155c4f1ec5885311\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/topkg@opam:1.0.0",
        "@opam/uchar@opam:0.0.2", "@opam/uutf@opam:1.0.1", "ocaml@4.7.1000"
      ]
    },
    "@opam/jbuilder@opam:transition": {
      "record": {
        "name": "@opam/jbuilder",
        "version": "opam:transition",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "jbuilder",
          "version": "transition",
          "opam":
            "opam-version: \"2.0\"\nname: \"jbuilder\"\nversion: \"transition\"\nsynopsis:\n  \"This is a transition package, jbuilder is now named dune. Use the dune\"\ndescription: \"package instead.\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml/dune\"\nbug-reports: \"https://github.com/ocaml/dune/issues\"\ndepends: [\"ocaml\" \"dune\"]\npost-messages:\n  \"Jbuilder has been renamed and the jbuilder package is now a transition package. Use the dune package instead.\"\ndev-repo: \"git+https://github.com/ocaml/dune.git\"",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/dune@opam:1.5.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/ipaddr@opam:2.8.0": {
      "record": {
        "name": "@opam/ipaddr",
        "version": "opam:2.8.0",
        "source":
          "archive:https://github.com/mirage/ocaml-ipaddr/releases/download/2.8.0/ipaddr-2.8.0.tbz#md5:f3442867873b4b60d7860283ff98c3c8",
        "files": [],
        "opam": {
          "name": "ipaddr",
          "version": "2.8.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"ipaddr\"\nversion: \"2.8.0\"\nsynopsis: \"IP (and MAC) address manipulation\"\ndescription: \"\"\"\nA library for manipulation of IP (and MAC) address representations.\n\nFeatures:\n\n * Depends only on sexplib (conditionalization under consideration)\n * oUnit-based tests\n * IPv4 and IPv6 support\n * IPv4 and IPv6 CIDR prefix support\n * IPv4 and IPv6 [CIDR-scoped address](http://tools.ietf.org/html/rfc4291#section-2.3) support\n * `Ipaddr.V4` and `Ipaddr.V4.Prefix` modules are `Map.OrderedType`\n * `Ipaddr.V6` and `Ipaddr.V6.Prefix` modules are `Map.OrderedType`\n * `Ipaddr` and `Ipaddr.Prefix` modules are `Map.OrderedType`\n * `Ipaddr_unix` in findlib subpackage `ipaddr.unix` provides compatibility with the standard library `Unix` module\n * `Ipaddr_top` in findlib subpackage `ipaddr.top` provides top-level pretty printers (requires compiler-libs default since OCaml 4.0)\n * IP address scope classification\n * IPv4-mapped addresses in IPv6 (::ffff:0:0/96) are an embedding of IPv4\n * MAC-48 (Ethernet) address support\n * `Macaddr` is a `Map.OrderedType`\n * All types have sexplib serializers/deserializers\"\"\"\nmaintainer: \"sheets@alum.mit.edu\"\nauthors: [\"David Sheets\" \"Anil Madhavapeddy\" \"Hugo Heuzard\"]\nlicense: \"ISC\"\ntags: [\"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-ipaddr\"\ndoc: \"https://mirage.github.io/ocaml-ipaddr/\"\nbug-reports: \"https://github.com/mirage/ocaml-ipaddr/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n  \"base-bytes\"\n  \"ppx_sexp_conv\" {>= \"v0.9.0\"}\n  \"sexplib\"\n  \"ounit\" {with-test}\n]\ndepopts: [\"base-unix\"]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-ipaddr.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-ipaddr/releases/download/2.8.0/ipaddr-2.8.0.tbz\"\n  checksum: \"md5=f3442867873b4b60d7860283ff98c3c8\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/jbuilder@opam:transition", "@opam/ppx_sexp_conv@opam:v0.11.2",
        "@opam/sexplib@opam:v0.11.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/fmt@opam:0.8.5": {
      "record": {
        "name": "@opam/fmt",
        "version": "opam:0.8.5",
        "source":
          "archive:http://erratique.ch/software/fmt/releases/fmt-0.8.5.tbz#md5:77b64aa6f20f09de28f2405d6195f12c",
        "files": [],
        "opam": {
          "name": "fmt",
          "version": "0.8.5",
          "opam":
            "opam-version: \"2.0\"\nname: \"fmt\"\nversion: \"0.8.5\"\nsynopsis: \"OCaml Format pretty-printer combinators\"\ndescription: \"\"\"\nFmt exposes combinators to devise `Format` pretty-printing functions.\n\nFmt depends only on the OCaml standard library. The optional `Fmt_tty`\nlibrary that allows to setup formatters for terminal color output\ndepends on the Unix library. The optional `Fmt_cli` library that\nprovides command line support for Fmt depends on [`Cmdliner`][cmdliner].\n\nFmt is distributed under the ISC license.\n\n[cmdliner]: http://erratique.ch/software/cmdliner\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: [\"Daniel B端nzli <daniel.buenzl i@erratique.ch>\" \"Gabriel Radanne\"]\nlicense: \"ISC\"\ntags: [\"string\" \"format\" \"pretty-print\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/fmt\"\ndoc: \"http://erratique.ch/software/fmt\"\nbug-reports: \"https://github.com/dbuenzli/fmt/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build & >= \"0.9.0\"}\n  \"result\"\n  \"uchar\"\n]\ndepopts: [\"base-unix\" \"cmdliner\"]\nconflicts: [\n  \"cmdliner\" {< \"0.9.8\"}\n]\nbuild: [\n  \"ocaml\"\n  \"pkg/pkg.ml\"\n  \"build\"\n  \"--dev-pkg\"\n  \"%{pinned}%\"\n  \"--with-base-unix\"\n  \"%{base-unix:installed}%\"\n  \"--with-cmdliner\"\n  \"%{cmdliner:installed}%\"\n]\ndev-repo: \"git+http://erratique.ch/repos/fmt.git\"\nurl {\n  src: \"http://erratique.ch/software/fmt/releases/fmt-0.8.5.tbz\"\n  checksum: \"md5=77b64aa6f20f09de28f2405d6195f12c\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "@opam/topkg@opam:1.0.0", "@opam/uchar@opam:0.0.2", "ocaml@4.7.1000"
      ]
    },
    "@opam/fieldslib@opam:v0.11.0": {
      "record": {
        "name": "@opam/fieldslib",
        "version": "opam:v0.11.0",
        "source":
          "archive:https://ocaml.janestreet.com/ocaml-core/v0.11/files/fieldslib-v0.11.0.tar.gz#md5:a42506b460a1dc47fb65a37d875211ae",
        "files": [],
        "opam": {
          "name": "fieldslib",
          "version": "v0.11.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"fieldslib\"\nversion: \"v0.11.0\"\nsynopsis:\n  \"Syntax extension to define first class values representing record fields, to get and set record fields, iterate and fold over all fields of a record and create new record values\"\ndescription: \"\"\"\nPart of Jane Street's Core library\nThe Core suite of libraries is an industrial strength alternative to\nOCaml's standard library that was developed by Jane Street, the\nlargest industrial user of OCaml.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/fieldslib\"\nbug-reports: \"https://github.com/janestreet/fieldslib/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"base\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n  \"ocaml-migrate-parsetree\" {>= \"1.0\"}\n  \"ppxlib\" {>= \"0.1.0\"}\n]\nconflicts: [\n  \"jbuilder\" {= \"1.0+beta19\"}\n]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/fieldslib.git\"\nurl {\n  src:\n    \"https://ocaml.janestreet.com/ocaml-core/v0.11/files/fieldslib-v0.11.0.tar.gz\"\n  checksum: \"md5=a42506b460a1dc47fb65a37d875211ae\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base@opam:v0.11.1",
        "@opam/jbuilder@opam:transition",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ppxlib@opam:0.3.1", "ocaml@4.7.1000"
      ]
    },
    "@opam/easy-format@opam:1.3.1": {
      "record": {
        "name": "@opam/easy-format",
        "version": "opam:1.3.1",
        "source":
          "archive:https://github.com/mjambon/easy-format/archive/v1.3.1.tar.gz#md5:4e163700fb88fdcd6b8976c3a216c8ea",
        "files": [],
        "opam": {
          "name": "easy-format",
          "version": "1.3.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"easy-format\"\nversion: \"1.3.1\"\nsynopsis:\n  \"High-level and functional interface to the Format module of the OCaml standard library\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nhomepage: \"http://mjambon.com/easy-format.html\"\nbug-reports: \"https://github.com/mjambon/easy-format/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build}\n]\nbuild: [\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/easy-format.git\"\nurl {\n  src: \"https://github.com/mjambon/easy-format/archive/v1.3.1.tar.gz\"\n  checksum: \"md5=4e163700fb88fdcd6b8976c3a216c8ea\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/dune@opam:1.5.0": {
      "record": {
        "name": "@opam/dune",
        "version": "opam:1.5.0",
        "source":
          "archive:https://github.com/ocaml/dune/releases/download/1.5.0/dune-1.5.0.tbz#md5:100af30f3c734f066191b8fde28271bc",
        "files": [],
        "opam": {
          "name": "dune",
          "version": "1.5.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"dune\"\nversion: \"1.5.0\"\nsynopsis: \"Fast, portable and opinionated build system\"\ndescription: \"\"\"\ndune is a build system that was designed to simplify the release of\nJane Street packages. It reads metadata from \"dune\" files following a\nvery simple s-expression syntax.\n\ndune is fast, it has very low-overhead and support parallel builds on\nall platforms. It has no system dependencies, all you need to build\ndune and packages using dune is OCaml. You don't need or make or bash\nas long as the packages themselves don't use bash explicitly.\n\ndune supports multi-package development by simply dropping multiple\nrepositories into the same directory.\n\nIt also supports multi-context builds, such as building against\nseveral opam roots/switches simultaneously. This helps maintaining\npackages across several versions of OCaml and gives cross-compilation\nfor free.\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"MIT\"\nhomepage: \"https://github.com/ocaml/dune\"\nbug-reports: \"https://github.com/ocaml/dune/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02\"}\n]\nconflicts: [\n  \"jbuilder\" {!= \"transition\"}\n]\nbuild: [\n  [\"ocaml\" \"configure.ml\" \"--libdir\" lib] {opam-version < \"2\"}\n  [\"ocaml\" \"bootstrap.ml\"]\n  [\"./boot.exe\" \"--release\" \"--subst\"] {pinned}\n  [\"./boot.exe\" \"--release\" \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/ocaml/dune.git\"\nurl {\n  src: \"https://github.com/ocaml/dune/releases/download/1.5.0/dune-1.5.0.tbz\"\n  checksum: \"md5=100af30f3c734f066191b8fde28271bc\"\n}",
          "override": {
            "build": [
              [ "ocaml", "bootstrap.ml" ],
              [ "./boot.exe", "--release", "-j", "4" ]
            ]
          }
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1", "ocaml@4.7.1000" ]
    },
    "@opam/cppo_ocamlbuild@opam:1.6.0": {
      "record": {
        "name": "@opam/cppo_ocamlbuild",
        "version": "opam:1.6.0",
        "source":
          "archive:https://github.com/mjambon/cppo/archive/v1.6.0.tar.gz#md5:aee411b3546bc5d198c71ae9185cade4",
        "files": [],
        "opam": {
          "name": "cppo_ocamlbuild",
          "version": "1.6.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"cppo_ocamlbuild\"\nversion: \"1.6.0\"\nsynopsis: \"ocamlbuild support for cppo, OCaml-friendly source preprocessor\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nlicense: \"BSD-3-Clause\"\nhomepage: \"http://mjambon.com/cppo.html\"\nbug-reports: \"https://github.com/mjambon/cppo/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"ocamlbuild\"\n  \"ocamlfind\"\n  \"cppo\" {>= \"1.6.0\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/mjambon/cppo.git\"\nurl {\n  src: \"https://github.com/mjambon/cppo/archive/v1.6.0.tar.gz\"\n  checksum: \"md5=aee411b3546bc5d198c71ae9185cade4\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cppo@opam:1.6.5",
        "@opam/jbuilder@opam:transition", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/cppo@opam:1.6.5": {
      "record": {
        "name": "@opam/cppo",
        "version": "opam:1.6.5",
        "source":
          "archive:https://github.com/mjambon/cppo/archive/v1.6.5.tar.gz#md5:1cd25741d31417995b0973fe0b6f6c82",
        "files": [],
        "opam": {
          "name": "cppo",
          "version": "1.6.5",
          "opam":
            "opam-version: \"2.0\"\nname: \"cppo\"\nversion: \"1.6.5\"\nsynopsis: \"Equivalent of the C preprocessor for OCaml programs\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nlicense: \"BSD-3-Clause\"\nhomepage: \"https://github.com/mjambon/cppo\"\nbug-reports: \"https://github.com/mjambon/cppo/issues\"\ndepends: [\n  \"ocaml\"\n  \"jbuilder\" {build & >= \"1.0+beta17\"}\n  \"base-unix\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/cppo.git\"\nurl {\n  src: \"https://github.com/mjambon/cppo/archive/v1.6.5.tar.gz\"\n  checksum: \"md5=1cd25741d31417995b0973fe0b6f6c82\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1000"
      ]
    },
    "@opam/conf-which@opam:1": {
      "record": {
        "name": "@opam/conf-which",
        "version": "opam:1",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "conf-which",
          "version": "1",
          "opam":
            "opam-version: \"2.0\"\nname: \"conf-which\"\nversion: \"1\"\nsynopsis: \"Virtual package relying on which\"\ndescription:\n  \"This package can only install if the which program is installed on the system.\"\nmaintainer: \"unixjunkie@sdf.org\"\nauthors: \"Carlo Wood\"\nlicense: \"GPL-2+\"\nhomepage: \"http://www.gnu.org/software/which/\"\nbug-reports: \"https://github.com/ocaml/opam-repository/issues\"\nflags: conf\nbuild: [\"which\" \"which\"]\ndepexts: [\n  [\"which\"] {os-distribution = \"centos\"}\n  [\"which\"] {os-distribution = \"fedora\"}\n  [\"which\"] {os-distribution = \"opensuse\"}\n  [\"debianutils\"] {os-distribution = \"debian\"}\n  [\"debianutils\"] {os-distribution = \"ubuntu\"}\n  [\"which\"] {os-distribution = \"nixos\"}\n  [\"which\"] {os-distribution = \"archlinux\"}\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/conf-m4@opam:1": {
      "record": {
        "name": "@opam/conf-m4",
        "version": "opam:1",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "conf-m4",
          "version": "1",
          "opam":
            "opam-version: \"2.0\"\nname: \"conf-m4\"\nversion: \"1\"\nsynopsis: \"Virtual package relying on m4\"\ndescription:\n  \"This package can only install if the m4 binary is installed on the system.\"\nmaintainer: \"tim@gfxmonk.net\"\nauthors: \"GNU Project\"\nlicense: \"GPL-3\"\nhomepage: \"http://www.gnu.org/software/m4/m4.html\"\nbug-reports: \"https://github.com/ocaml/opam-repository/issues\"\nflags: conf\nbuild: [\"sh\" \"-exc\" \"echo | m4\"]\ndepexts: [\n  [\"m4\"] {os-distribution = \"debian\"}\n  [\"m4\"] {os-distribution = \"ubuntu\"}\n  [\"m4\"] {os-distribution = \"fedora\"}\n  [\"m4\"] {os-distribution = \"rhel\"}\n  [\"m4\"] {os-distribution = \"centos\"}\n  [\"m4\"] {os-distribution = \"alpine\"}\n  [\"m4\"] {os-distribution = \"nixos\"}\n  [\"m4\"] {os-distribution = \"opensuse\"}\n  [\"m4\"] {os-distribution = \"oraclelinux\"}\n  [\"m4\"] {os-distribution = \"archlinux\"}\n]",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/conduit-lwt-unix@opam:1.3.0": {
      "record": {
        "name": "@opam/conduit-lwt-unix",
        "version": "opam:1.3.0",
        "source":
          "archive:https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz#md5:df1c271a56537f8176eba811ab40ec19",
        "files": [],
        "opam": {
          "name": "conduit-lwt-unix",
          "version": "1.3.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"conduit-lwt-unix\"\nversion: \"1.3.0\"\nsynopsis: \"An OCaml network connection establishment library\"\ndescription: \"\"\"\n[![Build Status](https://travis-ci.org/mirage/ocaml-conduit.svg?branch=master)](https://travis-ci.org/mirage/ocaml-conduit)\n\nThe `conduit` library takes care of establishing and listening for \nTCP and SSL/TLS connections for the Lwt and Async libraries.\n\nThe reason this library exists is to provide a degree of abstraction\nfrom the precise SSL library used, since there are a variety of ways\nto bind to a library (e.g. the C FFI, or the Ctypes library), as well\nas well as which library is used (just OpenSSL for now).\n\nBy default, OpenSSL is used as the preferred connection library, but\nyou can force the use of the pure OCaml TLS stack by setting the\nenvironment variable `CONDUIT_TLS=native` when starting your program.\n\nThe opam packages available are:\n\n- `conduit`: the main `Conduit` module\n- `conduit-lwt`: the portable Lwt implementation\n- `conduit-lwt-unix`: the Lwt/Unix implementation\n- `conduit-async` the Jane Street Async implementation\n- `mirage-conduit`: the MirageOS compatible implementation\n\n### Debugging\n\nSome of the `Lwt_unix`-based modules use a non-empty `CONDUIT_DEBUG`\nenvironment variable to output debugging information to standard error.\nJust set this variable when running the program to see what URIs\nare being resolved to.\n\n### Further Informartion\n\n* **API Docs:** http://docs.mirage.io/\n* **WWW:** https://github.com/mirage/ocaml-conduit\n* **E-mail:** <mirageos-devel@lists.xenproject.org>\n* **Bugs:** https://github.com/mirage/ocaml-conduit/issues\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\" \"Thomas Leonard\" \"Thomas Gazagnaire\" \"Rudi Grinberg\"\n]\nlicense: \"ISC\"\ntags: \"org:mirage\"\nhomepage: \"https://github.com/mirage/ocaml-conduit\"\nbug-reports: \"https://github.com/mirage/ocaml-conduit/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"dune\" {build}\n  \"base-unix\"\n  \"ppx_sexp_conv\"\n  \"conduit-lwt\" {>= \"1.3.0\"}\n  \"lwt\" {>= \"3.0.0\"}\n  \"uri\" {>= \"1.9.4\"}\n  \"ipaddr\" {>= \"2.8.0\"}\n]\ndepopts: [\"tls\" \"lwt_ssl\" \"launchd\"]\nconflicts: [\n  \"tls\" {< \"0.8.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-conduit.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz\"\n  checksum: \"md5=df1c271a56537f8176eba811ab40ec19\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/conduit-lwt@opam:1.3.0", "@opam/dune@opam:1.5.0",
        "@opam/ipaddr@opam:2.8.0", "@opam/lwt@opam:4.1.0",
        "@opam/ppx_sexp_conv@opam:v0.11.2", "@opam/uri@opam:2.0.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/conduit-lwt@opam:1.3.0": {
      "record": {
        "name": "@opam/conduit-lwt",
        "version": "opam:1.3.0",
        "source":
          "archive:https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz#md5:df1c271a56537f8176eba811ab40ec19",
        "files": [],
        "opam": {
          "name": "conduit-lwt",
          "version": "1.3.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"conduit-lwt\"\nversion: \"1.3.0\"\nsynopsis: \"An OCaml network connection establishment library\"\ndescription: \"\"\"\n[![Build Status](https://travis-ci.org/mirage/ocaml-conduit.svg?branch=master)](https://travis-ci.org/mirage/ocaml-conduit)\n\nThe `conduit` library takes care of establishing and listening for \nTCP and SSL/TLS connections for the Lwt and Async libraries.\n\nThe reason this library exists is to provide a degree of abstraction\nfrom the precise SSL library used, since there are a variety of ways\nto bind to a library (e.g. the C FFI, or the Ctypes library), as well\nas well as which library is used (just OpenSSL for now).\n\nBy default, OpenSSL is used as the preferred connection library, but\nyou can force the use of the pure OCaml TLS stack by setting the\nenvironment variable `CONDUIT_TLS=native` when starting your program.\n\nThe opam packages available are:\n\n- `conduit`: the main `Conduit` module\n- `conduit-lwt`: the portable Lwt implementation\n- `conduit-lwt-unix`: the Lwt/Unix implementation\n- `conduit-async` the Jane Street Async implementation\n- `mirage-conduit`: the MirageOS compatible implementation\n\n### Debugging\n\nSome of the `Lwt_unix`-based modules use a non-empty `CONDUIT_DEBUG`\nenvironment variable to output debugging information to standard error.\nJust set this variable when running the program to see what URIs\nare being resolved to.\n\n### Further Informartion\n\n* **API Docs:** http://docs.mirage.io/\n* **WWW:** https://github.com/mirage/ocaml-conduit\n* **E-mail:** <mirageos-devel@lists.xenproject.org>\n* **Bugs:** https://github.com/mirage/ocaml-conduit/issues\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\" \"Thomas Leonard\" \"Thomas Gazagnaire\" \"Rudi Grinberg\"\n]\nlicense: \"ISC\"\ntags: \"org:mirage\"\nhomepage: \"https://github.com/mirage/ocaml-conduit\"\nbug-reports: \"https://github.com/mirage/ocaml-conduit/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"dune\" {build}\n  \"base-unix\"\n  \"ppx_sexp_conv\"\n  \"sexplib\"\n  \"conduit\" {>= \"1.3.0\"}\n  \"lwt\" {>= \"3.0.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-conduit.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz\"\n  checksum: \"md5=df1c271a56537f8176eba811ab40ec19\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/conduit@opam:1.3.0", "@opam/dune@opam:1.5.0",
        "@opam/lwt@opam:4.1.0", "@opam/ppx_sexp_conv@opam:v0.11.2",
        "@opam/sexplib@opam:v0.11.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/conduit@opam:1.3.0": {
      "record": {
        "name": "@opam/conduit",
        "version": "opam:1.3.0",
        "source":
          "archive:https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz#md5:df1c271a56537f8176eba811ab40ec19",
        "files": [],
        "opam": {
          "name": "conduit",
          "version": "1.3.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"conduit\"\nversion: \"1.3.0\"\nsynopsis: \"An OCaml network connection establishment library\"\ndescription: \"\"\"\n[![Build Status](https://travis-ci.org/mirage/ocaml-conduit.svg?branch=master)](https://travis-ci.org/mirage/ocaml-conduit)\n\nThe `conduit` library takes care of establishing and listening for \nTCP and SSL/TLS connections for the Lwt and Async libraries.\n\nThe reason this library exists is to provide a degree of abstraction\nfrom the precise SSL library used, since there are a variety of ways\nto bind to a library (e.g. the C FFI, or the Ctypes library), as well\nas well as which library is used (just OpenSSL for now).\n\nBy default, OpenSSL is used as the preferred connection library, but\nyou can force the use of the pure OCaml TLS stack by setting the\nenvironment variable `CONDUIT_TLS=native` when starting your program.\n\nThe opam packages available are:\n\n- `conduit`: the main `Conduit` module\n- `conduit-lwt`: the portable Lwt implementation\n- `conduit-lwt-unix`: the Lwt/Unix implementation\n- `conduit-async` the Jane Street Async implementation\n- `mirage-conduit`: the MirageOS compatible implementation\n\n### Debugging\n\nSome of the `Lwt_unix`-based modules use a non-empty `CONDUIT_DEBUG`\nenvironment variable to output debugging information to standard error.\nJust set this variable when running the program to see what URIs\nare being resolved to.\n\n### Further Informartion\n\n* **API Docs:** http://docs.mirage.io/\n* **WWW:** https://github.com/mirage/ocaml-conduit\n* **E-mail:** <mirageos-devel@lists.xenproject.org>\n* **Bugs:** https://github.com/mirage/ocaml-conduit/issues\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\" \"Thomas Leonard\" \"Thomas Gazagnaire\" \"Rudi Grinberg\"\n]\nlicense: \"ISC\"\ntags: \"org:mirage\"\nhomepage: \"https://github.com/mirage/ocaml-conduit\"\ndoc: \"https://mirage.github.io/ocaml-conduit/\"\nbug-reports: \"https://github.com/mirage/ocaml-conduit/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.03.0\"}\n  \"dune\" {build}\n  \"ppx_sexp_conv\"\n  \"sexplib\"\n  \"astring\"\n  \"uri\"\n  \"result\"\n  \"logs\" {>= \"0.5.0\"}\n  \"ipaddr\" {>= \"2.5.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-conduit.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-conduit/releases/download/v1.3.0/conduit-v1.3.0.tbz\"\n  checksum: \"md5=df1c271a56537f8176eba811ab40ec19\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/astring@opam:0.8.3",
        "@opam/dune@opam:1.5.0", "@opam/ipaddr@opam:2.8.0",
        "@opam/logs@opam:0.6.2", "@opam/ppx_sexp_conv@opam:v0.11.2",
        "@opam/result@opam:1.3", "@opam/sexplib@opam:v0.11.0",
        "@opam/uri@opam:2.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/cohttp-lwt-unix@opam:1.2.0": {
      "record": {
        "name": "@opam/cohttp-lwt-unix",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz#md5:7aa3d4582848afff9a62f866b23173e1",
        "files": [],
        "opam": {
          "name": "cohttp-lwt-unix",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"cohttp-lwt-unix\"\nversion: \"1.2.0\"\nsynopsis: \"An OCaml library for HTTP clients and servers\"\ndescription: \"\"\"\n[![Join the chat at https://gitter.im/mirage/ocaml-cohttp](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mirage/ocaml-cohttp?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nCohttp is an OCaml library for creating HTTP daemons. It has a portable\nHTTP parser, and implementations using various asynchronous programming\nlibraries:\n\n* `Cohttp_lwt_unix` uses the [Lwt](https://ocsigen.org/lwt/) library, and\n  specifically the UNIX bindings.\n* `Cohttp_async` uses the [Async](https://realworldocaml.org/v1/en/html/concurrent-programming-with-async.html)\n  library.\n* `Cohttp_lwt` exposes an OS-independent Lwt interface, which is used\n  by the [Mirage](https://mirage.io/) interface to generate standalone\n  microkernels (use the cohttp-mirage subpackage).\n* `Cohttp_lwt_xhr` compiles to a JavaScript module that maps the Cohttp\n  calls to XMLHTTPRequests.  This is used to compile OCaml libraries like\n  the GitHub bindings to JavaScript and still run efficiently.\n\nYou can implement other targets using the parser very easily. Look at the `IO`\nsignature in `lib/s.mli` and implement that in the desired backend.\n\nYou can activate some runtime debugging by setting `COHTTP_DEBUG` to any\nvalue, and all requests and responses will be written to stderr.  Further\ndebugging of the connection layer can be obtained by setting `CONDUIT_DEBUG`\nto any value.\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\"\n  \"Stefano Zacchiroli\"\n  \"David Sheets\"\n  \"Thomas Gazagnaire\"\n  \"David Scott\"\n  \"Rudi Grinberg\"\n  \"Andy Ray\"\n]\nlicense: \"ISC\"\ntags: [\"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-cohttp\"\ndoc: \"https://mirage.github.io/ocaml-cohttp/\"\nbug-reports: \"https://github.com/mirage/ocaml-cohttp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"dune\" {build & >= \"1.1.0\"}\n  \"conduit-lwt-unix\" {>= \"1.0.3\"}\n  \"cmdliner\"\n  \"magic-mime\"\n  \"logs\"\n  \"fmt\" {>= \"0.8.2\"}\n  \"cohttp-lwt\"\n  \"lwt\" {>= \"3.0.0\"}\n  \"base-unix\"\n  \"ounit\" {with-test}\n]\nconflicts: [\n  \"lwt\" {< \"2.5.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test & os != \"macos\"}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-cohttp.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz\"\n  checksum: \"md5=7aa3d4582848afff9a62f866b23173e1\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-unix@opam:base",
        "@opam/cmdliner@opam:1.0.2", "@opam/cohttp-lwt@opam:1.2.0",
        "@opam/conduit-lwt-unix@opam:1.3.0", "@opam/dune@opam:1.5.0",
        "@opam/fmt@opam:0.8.5", "@opam/logs@opam:0.6.2",
        "@opam/lwt@opam:4.1.0", "@opam/magic-mime@opam:1.1.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/cohttp-lwt@opam:1.2.0": {
      "record": {
        "name": "@opam/cohttp-lwt",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz#md5:7aa3d4582848afff9a62f866b23173e1",
        "files": [],
        "opam": {
          "name": "cohttp-lwt",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"cohttp-lwt\"\nversion: \"1.2.0\"\nsynopsis: \"An OCaml library for HTTP clients and servers\"\ndescription: \"\"\"\n[![Join the chat at https://gitter.im/mirage/ocaml-cohttp](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mirage/ocaml-cohttp?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nCohttp is an OCaml library for creating HTTP daemons. It has a portable\nHTTP parser, and implementations using various asynchronous programming\nlibraries:\n\n* `Cohttp_lwt_unix` uses the [Lwt](https://ocsigen.org/lwt/) library, and\n  specifically the UNIX bindings.\n* `Cohttp_async` uses the [Async](https://realworldocaml.org/v1/en/html/concurrent-programming-with-async.html)\n  library.\n* `Cohttp_lwt` exposes an OS-independent Lwt interface, which is used\n  by the [Mirage](https://mirage.io/) interface to generate standalone\n  microkernels (use the cohttp-mirage subpackage).\n* `Cohttp_lwt_xhr` compiles to a JavaScript module that maps the Cohttp\n  calls to XMLHTTPRequests.  This is used to compile OCaml libraries like\n  the GitHub bindings to JavaScript and still run efficiently.\n\nYou can implement other targets using the parser very easily. Look at the `IO`\nsignature in `lib/s.mli` and implement that in the desired backend.\n\nYou can activate some runtime debugging by setting `COHTTP_DEBUG` to any\nvalue, and all requests and responses will be written to stderr.  Further\ndebugging of the connection layer can be obtained by setting `CONDUIT_DEBUG`\nto any value.\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\"\n  \"Stefano Zacchiroli\"\n  \"David Sheets\"\n  \"Thomas Gazagnaire\"\n  \"David Scott\"\n  \"Rudi Grinberg\"\n  \"Andy Ray\"\n]\nlicense: \"ISC\"\ntags: [\"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-cohttp\"\ndoc: \"https://mirage.github.io/ocaml-cohttp/\"\nbug-reports: \"https://github.com/mirage/ocaml-cohttp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"dune\" {build & >= \"1.1.0\"}\n  \"cohttp\" {>= \"1.0.0\"}\n  \"lwt\"\n  \"sexplib0\"\n  \"ppx_sexp_conv\" {>= \"v0.9.0\"}\n]\nconflicts: [\n  \"lwt\" {< \"2.5.0\"}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-cohttp.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz\"\n  checksum: \"md5=7aa3d4582848afff9a62f866b23173e1\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/cohttp@opam:1.2.0",
        "@opam/dune@opam:1.5.0", "@opam/lwt@opam:4.1.0",
        "@opam/ppx_sexp_conv@opam:v0.11.2", "@opam/sexplib0@opam:v0.11.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/cohttp@opam:1.2.0": {
      "record": {
        "name": "@opam/cohttp",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz#md5:7aa3d4582848afff9a62f866b23173e1",
        "files": [],
        "opam": {
          "name": "cohttp",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"cohttp\"\nversion: \"1.2.0\"\nsynopsis: \"An OCaml library for HTTP clients and servers\"\ndescription: \"\"\"\n[![Join the chat at https://gitter.im/mirage/ocaml-cohttp](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mirage/ocaml-cohttp?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nCohttp is an OCaml library for creating HTTP daemons. It has a portable\nHTTP parser, and implementations using various asynchronous programming\nlibraries:\n\n* `Cohttp_lwt_unix` uses the [Lwt](https://ocsigen.org/lwt/) library, and\n  specifically the UNIX bindings.\n* `Cohttp_async` uses the [Async](https://realworldocaml.org/v1/en/html/concurrent-programming-with-async.html)\n  library.\n* `Cohttp_lwt` exposes an OS-independent Lwt interface, which is used\n  by the [Mirage](https://mirage.io/) interface to generate standalone\n  microkernels (use the cohttp-mirage subpackage).\n* `Cohttp_lwt_xhr` compiles to a JavaScript module that maps the Cohttp\n  calls to XMLHTTPRequests.  This is used to compile OCaml libraries like\n  the GitHub bindings to JavaScript and still run efficiently.\n\nYou can implement other targets using the parser very easily. Look at the `IO`\nsignature in `lib/s.mli` and implement that in the desired backend.\n\nYou can activate some runtime debugging by setting `COHTTP_DEBUG` to any\nvalue, and all requests and responses will be written to stderr.  Further\ndebugging of the connection layer can be obtained by setting `CONDUIT_DEBUG`\nto any value.\"\"\"\nmaintainer: \"anil@recoil.org\"\nauthors: [\n  \"Anil Madhavapeddy\"\n  \"Stefano Zacchiroli\"\n  \"David Sheets\"\n  \"Thomas Gazagnaire\"\n  \"David Scott\"\n  \"Rudi Grinberg\"\n  \"Andy Ray\"\n]\nlicense: \"ISC\"\ntags: [\"org:mirage\" \"org:xapi-project\"]\nhomepage: \"https://github.com/mirage/ocaml-cohttp\"\ndoc: \"https://mirage.github.io/ocaml-cohttp/\"\nbug-reports: \"https://github.com/mirage/ocaml-cohttp/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"dune\" {build & >= \"1.1.0\"}\n  \"re\" {>= \"1.7.2\"}\n  \"uri\" {>= \"2.0.0\"}\n  \"fieldslib\"\n  \"sexplib0\"\n  \"ppx_fields_conv\" {>= \"v0.9.0\"}\n  \"ppx_sexp_conv\" {>= \"v0.9.0\"}\n  \"stringext\"\n  \"base64\" {>= \"2.0.0\"}\n  \"fmt\" {with-test}\n  \"jsonm\" {build}\n  \"alcotest\" {with-test}\n]\nbuild: [\n  [\"dune\" \"subst\"] {pinned}\n  [\"dune\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"dune\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-cohttp.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz\"\n  checksum: \"md5=7aa3d4582848afff9a62f866b23173e1\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base64@opam:2.2.0",
        "@opam/dune@opam:1.5.0", "@opam/fieldslib@opam:v0.11.0",
        "@opam/jsonm@opam:1.0.1", "@opam/ppx_fields_conv@opam:v0.11.0",
        "@opam/ppx_sexp_conv@opam:v0.11.2", "@opam/re@opam:1.8.0",
        "@opam/sexplib0@opam:v0.11.0", "@opam/stringext@opam:1.5.0",
        "@opam/uri@opam:2.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/cmdliner@opam:1.0.2": {
      "record": {
        "name": "@opam/cmdliner",
        "version": "opam:1.0.2",
        "source":
          "archive:http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.2.tbz#md5:ab2f0130e88e8dcd723ac6154c98a881",
        "files": [],
        "opam": {
          "name": "cmdliner",
          "version": "1.0.2",
          "opam":
            "opam-version: \"2.0\"\nname: \"cmdliner\"\nversion: \"1.0.2\"\nsynopsis: \"Declarative definition of command line interfaces for OCaml\"\ndescription: \"\"\"\nCmdliner allows the declarative definition of command line interfaces\nfor OCaml.\n\nIt provides a simple and compositional mechanism to convert command\nline arguments to OCaml values and pass them to your functions. The\nmodule automatically handles syntax errors, help messages and UNIX man\npage generation. It supports programs with single or multiple commands\nand respects most of the [POSIX][1] and [GNU][2] conventions.\n\nCmdliner has no dependencies and is distributed under the ISC license.\n\n[1]: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html\n[2]: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"cli\" \"system\" \"declarative\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/cmdliner\"\ndoc: \"http://erratique.ch/software/cmdliner/doc/Cmdliner\"\nbug-reports: \"https://github.com/dbuenzli/cmdliner/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"result\"\n]\nbuild: [\"ocaml\" \"pkg/pkg.ml\" \"build\" \"--pinned\" \"%{pinned}%\"]\ndev-repo: \"git+http://erratique.ch/repos/cmdliner.git\"\nurl {\n  src: \"http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.2.tbz\"\n  checksum: \"md5=ab2f0130e88e8dcd723ac6154c98a881\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlbuild@opam:0.12.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "@opam/topkg@opam:1.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/biniou@opam:1.2.0": {
      "record": {
        "name": "@opam/biniou",
        "version": "opam:1.2.0",
        "source":
          "archive:https://github.com/mjambon/biniou/archive/v1.2.0.tar.gz#md5:f3e92358e832ed94eaf23ce622ccc2f9",
        "files": [],
        "opam": {
          "name": "biniou",
          "version": "1.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"biniou\"\nversion: \"1.2.0\"\nsynopsis:\n  \"Binary data format designed for speed, safety, ease of use and backward compatibility as protocols evolve\"\nmaintainer: \"martin@mjambon.com\"\nauthors: \"Martin Jambon\"\nlicense: \"BSD-3-Clause\"\nhomepage: \"https://github.com/mjambon/biniou\"\nbug-reports: \"https://github.com/mjambon/biniou/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"conf-which\" {build}\n  \"jbuilder\" {build & >= \"1.0+beta7\"}\n  \"easy-format\"\n]\nbuild: [\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mjambon/biniou.git\"\nurl {\n  src: \"https://github.com/mjambon/biniou/archive/v1.2.0.tar.gz\"\n  checksum: \"md5=f3e92358e832ed94eaf23ce622ccc2f9\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/conf-which@opam:1",
        "@opam/easy-format@opam:1.3.1", "@opam/jbuilder@opam:transition",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/base64@opam:2.2.0": {
      "record": {
        "name": "@opam/base64",
        "version": "opam:2.2.0",
        "source":
          "archive:https://github.com/mirage/ocaml-base64/releases/download/v2.2.0/base64-2.2.0.tbz#md5:49f2bc4ae37b832c652277c0b701a02a",
        "files": [],
        "opam": {
          "name": "base64",
          "version": "2.2.0",
          "opam":
            "opam-version: \"2.0\"\nname: \"base64\"\nversion: \"2.2.0\"\nsynopsis: \"Base64 encoding for OCaml\"\ndescription: \"\"\"\nBase64 is a group of similar binary-to-text encoding schemes that represent\nbinary data in an ASCII string format by translating it into a radix-64\nrepresentation.  It is specified in [RFC 4648][rfc4648].\n\nSee also [documentation][docs].\n\n[rfc4648]: https://tools.ietf.org/html/rfc4648\n[docs]: http://mirage.github.io/ocaml-base64/base64/\n\n## Example\n\nSimple encoding and decoding.\n\n```shell\nutop # #require \"base64\";;\nutop # let enc = B64.encode \"OCaml rocks!\";;\nval enc : string = \"T0NhbWwgcm9ja3Mh\"\nutop # let plain = B64.decode enc;;\nval plain : string = \"OCaml rocks!\"\n```\n\n## License\n\n[ISC](https://www.isc.org/downloads/software-support-policy/isc-license/)\"\"\"\nmaintainer: \"mirageos-devel@lists.xenproject.org\"\nauthors: [\"Thomas Gazagnaire\" \"Anil Madhavapeddy\" \"Peter Zotov\"]\nlicense: \"ISC\"\nhomepage: \"https://github.com/mirage/ocaml-base64\"\ndoc: \"http://mirage.github.io/ocaml-base64/\"\nbug-reports: \"https://github.com/mirage/ocaml-base64/issues\"\ndepends: [\n  \"ocaml\"\n  \"base-bytes\"\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"bos\" {with-test}\n  \"rresult\" {with-test}\n  \"alcotest\" {with-test & >= \"0.4.0\"}\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/ocaml-base64.git\"\nurl {\n  src:\n    \"https://github.com/mirage/ocaml-base64/releases/download/v2.2.0/base64-2.2.0.tbz\"\n  checksum: \"md5=49f2bc4ae37b832c652277c0b701a02a\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/jbuilder@opam:transition", "ocaml@4.7.1000"
      ]
    },
    "@opam/base-unix@opam:base": {
      "record": {
        "name": "@opam/base-unix",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-unix",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-unix\"\nversion: \"base\"\nsynopsis: \"\"\ndescription: \"Unix library distributed with the OCaml compiler\"\nmaintainer: \"https://github.com/ocaml/opam-repository/issues\"",
          "override": null
        }
      },
      "dependencies": [ "@esy-ocaml/substs@0.0.1" ]
    },
    "@opam/base-bytes@opam:base": {
      "record": {
        "name": "@opam/base-bytes",
        "version": "opam:base",
        "source": "no-source:",
        "files": [],
        "opam": {
          "name": "base-bytes",
          "version": "base",
          "opam":
            "opam-version: \"2.0\"\nname: \"base-bytes\"\nversion: \"base\"\nsynopsis: \"Bytes library distributed with the OCaml compiler\"\nmaintainer: \" \"\nauthors: \" \"\nhomepage: \" \"\ndepends: [\n  \"ocaml\" {>= \"4.02.0\"}\n  \"ocamlfind\" {>= \"1.5.3\"}\n]",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/ocamlfind@opam:1.8.0",
        "ocaml@4.7.1000"
      ]
    },
    "@opam/base@opam:v0.11.1": {
      "record": {
        "name": "@opam/base",
        "version": "opam:v0.11.1",
        "source":
          "archive:https://github.com/janestreet/base/releases/download/v0.11.1/base-v0.11.1.tbz#md5:e7e7dc5db3f1fea19d74a31bbd4ac621",
        "files": [
          {
            "name": "base-v0.11.1.patch",
            "content":
              "--- ./src/exn_stubs.c\n+++ ./src/exn_stubs.c\n@@ -1,8 +1,13 @@\n #include <caml/mlvalues.h>\n \n extern int caml_backtrace_pos;\n+#ifndef _MSC_VER\n+#define UNUSED __attribute__((unused))\n+#else\n+#define UNUSED\n+#endif\n \n-CAMLprim value Base_clear_caml_backtrace_pos (value __attribute__((unused)) unit) {\n+CAMLprim value Base_clear_caml_backtrace_pos (value UNUSED unit) {\n   caml_backtrace_pos = 0;\n   return Val_unit;\n }\n--- ./src/int_math_stubs.c\n+++ ./src/int_math_stubs.c\n@@ -5,6 +5,25 @@\n #include <caml/mlvalues.h>\n #include <caml/memory.h>\n \n+#if defined(_MSC_VER)\n+#include <intrin.h>\n+#ifdef ARCH_SIXTYFOUR\n+#define __builtin_popcountll(x) __popcnt64((uint64_t)(x))\n+static __inline uint32_t __builtin_clzll(uint64_t value) {\n+  uint32_t leading_zero = 0;\n+  _BitScanReverse64(&leading_zero, value);\n+  return (63 - leading_zero);\n+}\n+#else\n+#define __builtin_popcount(x) __popcnt((unsigned int)(x))\n+static __inline uint32_t __builtin_clz(uint32_t value) {\n+  uint32_t leading_zero = 0;\n+  _BitScanReverse(&leading_zero, value);\n+  return (31 - leading_zero);\n+}\n+#endif /* ARCH_SIXTYFOUR */\n+#endif /* defined(_MSC_VER) */\n+\n static int64_t int_pow(int64_t base, int64_t exponent) {\n   int64_t ret = 1;\n   int64_t mul[4];\n--- ./src/jbuild\n+++ ./src/jbuild\n@@ -65,7 +65,7 @@\n     (progn\n      (with-stdout-to popcnt_test.c\n       (echo \"int main(int argc, char ** argv) { return __builtin_popcount(argc); }\"))\n-     (system \"${CC} -mpopcnt -c popcnt_test.c 2> ${null} && \\\n+     (bash \"${CC} -mpopcnt -c popcnt_test.c 2> ${null} && \\\n echo '(-mpopcnt)' > ${@} || echo '()' > ${@}\"))))))\n \n (ocamllex (hex_lexer))\n"
          }
        ],
        "opam": {
          "name": "base",
          "version": "v0.11.1",
          "opam":
            "opam-version: \"2.0\"\nname: \"base\"\nversion: \"v0.11.1\"\nsynopsis: \"Full standard library replacement for OCaml\"\ndescription: \"\"\"\nFull standard library replacement for OCaml\n\nBase is a complete and portable alternative to the OCaml standard\nlibrary. It provides all standard functionalities one would expect\nfrom a language standard library. It uses consistent conventions\nacross all of its module.\n\nBase aims to be usable in any context. As a result system dependent\nfeatures such as I/O are not offered by Base. They are instead\nprovided by companion libraries such as stdio:\n\n  https://github.com/janestreet/stdio\"\"\"\nmaintainer: \"opensource@janestreet.com\"\nauthors: \"Jane Street Group, LLC <opensource@janestreet.com>\"\nlicense: \"Apache-2.0\"\nhomepage: \"https://github.com/janestreet/base\"\nbug-reports: \"https://github.com/janestreet/base/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.04.1\"}\n  \"sexplib0\" {>= \"v0.11\" & < \"v0.12\"}\n  \"jbuilder\" {build & >= \"1.0+beta18.1\"}\n]\ndepopts: [\"base-native-int63\"]\nbuild: [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\ndev-repo: \"git+https://github.com/janestreet/base.git\"\nurl {\n  src:\n    \"https://github.com/janestreet/base/releases/download/v0.11.1/base-v0.11.1.tbz\"\n  checksum: \"md5=e7e7dc5db3f1fea19d74a31bbd4ac621\"\n}",
          "override": {
            "build": [
              [
                "bash", "-c",
                "#{os == 'windows' ? 'patch -p1 < base-v0.11.1.patch' : 'true'}"
              ],
              [ "jbuilder", "build", "-p", "base", "-j", "4" ]
            ]
          }
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/jbuilder@opam:transition",
        "@opam/sexplib0@opam:v0.11.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/astring@opam:0.8.3": {
      "record": {
        "name": "@opam/astring",
        "version": "opam:0.8.3",
        "source":
          "archive:http://erratique.ch/software/astring/releases/astring-0.8.3.tbz#md5:c5bf6352b9ac27fbeab342740f4fa870",
        "files": [],
        "opam": {
          "name": "astring",
          "version": "0.8.3",
          "opam":
            "opam-version: \"2.0\"\nname: \"astring\"\nversion: \"0.8.3\"\nsynopsis: \"Alternative String module for OCaml\"\ndescription: \"\"\"\nAstring exposes an alternative `String` module for OCaml. This module\ntries to balance minimality and expressiveness for basic, index-free,\nstring processing and provides types and functions for substrings,\nstring sets and string maps.\n\nRemaining compatible with the OCaml `String` module is a non-goal. The\n`String` module exposed by Astring has exception safe functions,\nremoves deprecated and rarely used functions, alters some signatures\nand names, adds a few missing functions and fully exploits OCaml's\nnewfound string immutability.\n\nAstring depends only on the OCaml standard library. It is distributed\nunder the ISC license.\"\"\"\nmaintainer: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nauthors: \"Daniel B端nzli <daniel.buenzl i@erratique.ch>\"\nlicense: \"ISC\"\ntags: [\"string\" \"org:erratique\"]\nhomepage: \"http://erratique.ch/software/astring\"\ndoc: \"http://erratique.ch/software/astring/doc\"\nbug-reports: \"https://github.com/dbuenzli/astring/issues\"\ndepends: [\n  \"ocaml\" {>= \"4.01.0\"}\n  \"ocamlfind\" {build}\n  \"ocamlbuild\" {build}\n  \"topkg\" {build}\n  \"base-bytes\"\n]\nbuild: [\"ocaml\" \"pkg/pkg.ml\" \"build\" \"--pinned\" \"%{pinned}%\"]\ndev-repo: \"git+http://erratique.ch/repos/astring.git\"\nurl {\n  src: \"http://erratique.ch/software/astring/releases/astring-0.8.3.tbz\"\n  checksum: \"md5=c5bf6352b9ac27fbeab342740f4fa870\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/base-bytes@opam:base",
        "@opam/ocamlbuild@opam:0.12.0", "@opam/ocamlfind@opam:1.8.0",
        "@opam/topkg@opam:1.0.0", "ocaml@4.7.1000"
      ]
    },
    "@opam/alcotest@opam:0.8.4": {
      "record": {
        "name": "@opam/alcotest",
        "version": "opam:0.8.4",
        "source":
          "archive:https://github.com/mirage/alcotest/releases/download/0.8.4/alcotest-0.8.4.tbz#md5:c940f89a2bb2e23d3f1422ce61d1396b",
        "files": [],
        "opam": {
          "name": "alcotest",
          "version": "0.8.4",
          "opam":
            "opam-version: \"2.0\"\nname: \"alcotest\"\nversion: \"0.8.4\"\nsynopsis: \"Alcotest is a lightweight and colourful test framework.\"\ndescription: \"\"\"\nAlcotest exposes simple interface to perform unit tests. It exposes\na simple TESTABLE module type, a check function to assert test\npredicates and a run function to perform a list of unit -> unit\ntest callbacks.\n\nAlcotest provides a quiet and colorful output where only faulty runs\nare fully displayed at the end of the run (with the full logs ready to\ninspect), with a simple (yet expressive) query language to select the\ntests to run.\"\"\"\nmaintainer: \"thomas@gazagnaire.org\"\nauthors: \"Thomas Gazagnaire\"\nlicense: \"ISC\"\nhomepage: \"https://github.com/mirage/alcotest/\"\ndoc: \"https://mirage.github.io/alcotest/\"\nbug-reports: \"https://github.com/mirage/alcotest/issues/\"\ndepends: [\n  \"ocaml\" {>= \"4.02.3\"}\n  \"jbuilder\" {build & >= \"1.0+beta10\"}\n  \"fmt\" {>= \"0.8.0\"}\n  \"astring\"\n  \"result\"\n  \"cmdliner\"\n  \"uuidm\"\n]\nbuild: [\n  [\"jbuilder\" \"subst\" \"-p\" name] {pinned}\n  [\"jbuilder\" \"build\" \"-p\" name \"-j\" jobs]\n  [\"jbuilder\" \"runtest\" \"-p\" name \"-j\" jobs] {with-test}\n]\ndev-repo: \"git+https://github.com/mirage/alcotest.git\"\nurl {\n  src:\n    \"https://github.com/mirage/alcotest/releases/download/0.8.4/alcotest-0.8.4.tbz\"\n  checksum: \"md5=c940f89a2bb2e23d3f1422ce61d1396b\"\n}",
          "override": null
        }
      },
      "dependencies": [
        "@esy-ocaml/substs@0.0.1", "@opam/astring@opam:0.8.3",
        "@opam/cmdliner@opam:1.0.2", "@opam/fmt@opam:0.8.5",
        "@opam/jbuilder@opam:transition", "@opam/result@opam:1.3",
        "@opam/uuidm@opam:0.9.6", "ocaml@4.7.1000"
      ]
    },
    "@esy-ocaml/substs@0.0.1": {
      "record": {
        "name": "@esy-ocaml/substs",
        "version": "0.0.1",
        "source":
          "archive:https://registry.npmjs.org/@esy-ocaml/substs/-/substs-0.0.1.tgz#sha1:59ebdbbaedcda123fc7ed8fb2b302b7d819e9a46",
        "files": [],
        "opam": null
      },
      "dependencies": []
    },
    "@esy-ocaml/reason@3.3.7": {
      "record": {
        "name": "@esy-ocaml/reason",
        "version": "3.3.7",
        "source":
          "archive:https://registry.npmjs.org/@esy-ocaml/reason/-/reason-3.3.7.tgz#sha1:4d75b8876807c4178c6fff2359962066bb69d944",
        "files": [],
        "opam": null
      },
      "dependencies": [
        "@opam/dune@opam:1.5.0", "@opam/menhir@opam:20181026",
        "@opam/merlin-extend@opam:0.3",
        "@opam/ocaml-migrate-parsetree@opam:1.1.0",
        "@opam/ocamlfind@opam:1.8.0", "@opam/result@opam:1.3",
        "ocaml@4.7.1000"
      ]
    }
  }
}